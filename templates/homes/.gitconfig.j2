# https://jvns.ca/blog/2024/02/16/popular-git-config-options/
[user]
	name = Tim Connors

[url "git@github.com:"]
#	# replace accidentally https cloned github repos with
#	# git@github
#	insteadOf = "https://github.com/"
        pushInsteadOf = git://github.com/
        pushInsteadOf = https://github.com/

# set up per repo exceptions via includeIf instead
#[url "git@gitlab.....au:"]
#	email = ...
[includeIf "gitdir:~/**/code/work/"]
	path = "~/code/work/.gitconfig"

[color]
	status = auto
	branch = auto
	interactive = auto
	diff = auto
	ui = true

[pager]
	log = diff-highlight | less
	show = diff-highlight | less
	diff = diff-highlight | less

[log]
	decorate=short
	follow=true

[diff]
	# https://www.reddit.com/r/git/comments/1oi0tw/is_there_any_way_have_git_diff_show_that_a_file/
        renames = copies
	# FIXME:
	# some of the internet is saying 0...  Need to try it...
	#    diff.renameLimit
        # The number of files to consider when performing the copy/rename
        # detection; equivalent to the git diff option -l.
        renamelimit = 20
	algorithm = histogram
	colorMoved = dimmed-zebra
	colorMovedWS = allow-indentation-change

[diff "gzip"]
        binary = true
	textconv = /bin/zcat

[delta]
	navigate = true    # use n and N to move between diff sections
	light = false      # set to true if you're in a terminal w/ a light background color (e.g. the default macOS terminal)

# from puppet/dotfiles/dot.gitconfig (jamie moore)
#[merge]
#        tool = vimdiff
[merge]
{% if deb_release != 'buster' %}
	conflictstyle = zdiff3
{% endif %}

[core]
	editor = e
	pager = less -F -X
	# FIXME: work out how to use pager without causing myself more problems
	# pager = delta

[branch]
# https://www.atlassian.com/git/tutorials/syncing/git-pull
	autosetuprebase = always

[push]
	default = simple
# newer git may require:
[pull]
	rebase = true

[alias]
# http://idnotfound.wordpress.com/2009/05/09/word-by-word-diffs-in-git/
	wdiff = diff --color-words
#     colordiff = diff --color
	graph = log --graph --abbrev-commit --decorate --date=relative --pretty=format:'%C(bold yellow)%h%Creset -%C(yellow)%d%Creset %s %C(bold green)(%cr) %C(bold blue)<%an>%Creset'
	graphall = log --graph --abbrev-commit --decorate --date=relative --all --pretty=format:'%C(bold yellow)%h%Creset -%C(yellow)%d%Creset %s %C(bold green)(%cr) %C(bold blue)<%an>%Creset'
        ci = commit
        co = checkout
        br = branch
        st = status
        who = shortlog -s --
        email = config user.email
# following from https://github.com/k88hudson/git-flight-rules#i-want-to-add-aliases-for-some-git-commands
        a = add
        amend = commit --amend
        c = commit
        ca = commit --amend
        # ci = commit -a
        # co = checkout
        d = diff
        dc = diff --changed
        ds = diff --staged
        f = fetch
        loll = log --graph --decorate --pretty=oneline --abbrev-commit
        m = merge
        one = log --pretty=oneline
        outstanding = rebase -i @{u}
        s = status
        unpushed = log @{u}
        wc = whatchanged
        wip = rebase -i @{u}
	zap = fetch -p

	# for `git blame --follow` whjich isn't implemented, so git blame just returns the commit that renamed a file.  This doesn't really work that well though:
	# https://stackoverflow.com/questions/29468273/why-git-blame-does-not-follow-renames
	follow = "!bash -c '                                                 \
    if [[ $1 == \"/\"* ]]; then                                      \
        FILE=$1;                                                     \
    else                                                             \
        FILE=${GIT_PREFIX}$1;                                        \
    fi;                                                              \
    echo \"git log --topo-order -u -L $2,${3:-$2}:\\\"$FILE\\\" $4 \";   \
    git log -w -b -p --ignore-blank-lines --topo-order -u -L $2,${3:-$2}:\"$FILE\" $4;\
' --"

[init]
	defaultBranch = main
[safe]
	directory = /mnt/c/Users/tconnors/dot-files
        directory = /mnt/c/Documents and Settings/tconnors/OneDrive - LA TROBE UNIVERSITY/Documents/dot-files-copy-from-ltu
