#!/bin/ksh

#set -x

CHROOTSHORTHOST="$SHORTHOST"

if [ -e /etc/hostname ] ; then
    CHROOTSHORTHOST=`cat /etc/hostname | sed 's/\..*//'`
#elif [ -e /etc/HOSTNAME ] ; then
#    CHROOTSHORTHOST=`cat /etc/HOSTNAME | sed 's/\..*//'`   #new cluster nodes use dhcp and get the hostname wrong half the time -- since all the boxes I can ever hope to get root on, and hence use chroot, are debian, and debian uses /etc/hostname...
fi


if [ "$REALHOST" != "$LONGHOST" ] ; then
    CHROOTSHORTHOST="$REALHOST"
fi

CHROOT=""
case "$CHROOTSHORTHOST" in
    $SHORTHOST|$SHORTHOST.*)
    ;;
    *)
        CHROOT="-`colorize --PS1prompt bright red -n chroot`"
    ;;
esac

{
    cat /etc/bashcolors $HOME/.bashcolors 2>/dev/null
    echo "root * dark red dark red"
    echo "* * bright grey dark blue"
} | (
    while read user hostname bu cu bh ch bg ; do
        if [ -n "$bg" ] ; then
            bg="--background $bg"
        fi
        case "$CHROOTSHORTHOST" in
            $hostname)
                if [[ "$USER" == $user ]] ; then
                    colorize --PS1prompt $bu $cu -n '\u'   #--PS1prompt is to tell colorize to print opening \[ and close \] ; -n is to tell echo to print no newline
                    echo -n @
                    colorize --PS1prompt $bg $bh $ch -n $CHROOTSHORTHOST # '\h' - not \h, because we could be chrooted
                    echo -n "$CHROOT"
                    #echo -n '\[\a\]'
                    exit
                fi
            ;;
        esac
    done	
    echo -n "${USER}@${CHROOTSHORTHOST}${CHROOT}"
)
