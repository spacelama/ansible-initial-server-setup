# These proxies loaded only in 0-http,https for rather.puzzling.org.
# Other sites don't load this file

## more specific rules first!
# equivalent might be:
#     RewriteCond %{HTTP_HOST} ^wvs1....$
#     RewriteRule ^/mapcache(.*) http://ho-meteye..../mapcache$1 [P,L]

ProxyPass /weather http://pi/~tconnors/weather
ProxyPassReverse /weather http://pi/~tconnors/weather

#RedirectMatch 301 ^/weather$ /weather/

# 20231224 reenabled html since we moved back from cgi strategy to cron - but cgi is still used for dynazoom graph, so keep it enabled
ProxyPass /munin-cgi/ http://iot/munin-cgi/
ProxyPassReverse /munin-cgi/ http://iot/munin-cgi/
ProxyPass /munin/ http://iot/munin/
ProxyPassReverse /munin/ http://iot/munin/

# ssl only:
#ProxyPass /cgi-bin/nut http://fs/cgi-bin/nut
#ProxyPassReverse /cgi-bin/nut http://fs/cgi-bin/nut

ProxyPass /mrtg http://iot/mrtg/
ProxyPassReverse /mrtg http://iot/mrtg/

ProxyPass /ledstrip/ http://ledstrip/
ProxyPassReverse /ledstrip/ http://ledstrip/

#ProxyPass /static http://iot/static
#ProxyPassReverse /static http://iot/static
#ProxyPass /cgi-bin/munin-cgi-graph http://iot/cgi-bin/munin-cgi-graph
#ProxyPassReverse /cgi-bin/munin-cgi-graph http://iot/cgi-bin/munin-cgi-graph

## more specific rules first!
# /zm/:
ProxyPass /zm http://zm/zm
ProxyPassReverse /zm http://zm/zm
# /weewx/:
ProxyPass /weewx http://iot/weewx
ProxyPassReverse /weewx http://iot/weewx

# All password protected pages below.

# WARNING: syntax is tricky - ProxyPassMatch is an re,
# ProxyPassReverse just substitutes links that are given back to us,
# and then the authtype Proxy clause is just a wildcard.  If they
# don't match, then you don't get a password protected hierarchy!

# ac.fcgi (study) -> pi/private-cgi-bin:
ProxyPassMatch ^/ac\.(.*)$ http://pi/~tconnors/private-cgi-bin/ac.$1
ProxyPassReverse /ac http://pi/~tconnors/private-cgi-bin/ac
<Proxy http://pi/~tconnors/private-cgi-bin/ac.*>
    AuthUserFile /etc/apache2/secrets/ac_htpasswd
    AuthType basic
    AuthName "AC Admin"
    require valid-user
</Proxy>

# ac-main (loungeroom) -> ac/:
ProxyPassMatch ^/ac-main/(.*)$ http://ac/$1
ProxyPassReverse /ac-main http://ac
<Proxy http://ac/*>
    AuthUserFile /etc/apache2/secrets/ac_htpasswd
    AuthType basic
    AuthName "AC Admin"
    require valid-user
</Proxy>

# phone.cgi -> iot/private-cgi-bin:
ProxyPassMatch ^/phone\.(.*)$ http://iot/~tconnors/private-cgi-bin/phone.$1
ProxyPassReverse /phone http://iot/~tconnors/private-cgi-bin/phone
<Proxy http://iot/~tconnors/private-cgi-bin/phone.*>
    AuthUserFile /etc/apache2/secrets/phone_htpasswd
    AuthType basic
    AuthName "Phone Admin"
    require valid-user
</Proxy>

# light*.fcgi -> iot/cgi-bin:
ProxyPassMatch ^/light\.(.*)$ http://iot/~tconnors/cgi-bin/light.$1
ProxyPassReverse /light http://iot/~tconnors/cgi-bin/light
<Proxy http://iot/~tconnors/cgi-bin/light.*>
    AuthUserFile /etc/apache2/secrets/light_htpasswd
    AuthType basic
    AuthName "Light Admin"
    require valid-user
</Proxy>

# stereo.cgi -> iot/cgi-bin:
ProxyPassMatch ^/stereo\.loungeroom\.(.*)$ http://iot/~tconnors/cgi-bin/stereo.loungeroom.$1
ProxyPassReverse /stereo.loungeroom http://iot/~tconnors/cgi-bin/stereo.loungeroom
<Proxy http://iot/~tconnors/cgi-bin/stereo.loungeroom.*>
    AuthUserFile /etc/apache2/secrets/stereo_htpasswd
    AuthType basic
    AuthName "Stereo Admin"
    require valid-user
</Proxy>

#location.fcgi
ProxyPassMatch ^/location\.(.*)$ http://iot/~tconnors/private-cgi-bin/location.$1
ProxyPassReverse /location http://iot/~tconnors/private-cgi-bin/location
<Proxy http://iot/~tconnors/private-cgi-bin/location.*>
    AuthUserFile /etc/apache2/secrets/location_htpasswd
    AuthType basic
    AuthName "Location Admin"
    require valid-user
</Proxy>

ProxyPass /backuppc http://fs/backuppc
ProxyPassReverse /backuppc http://fs/backuppc
<Proxy http://fs/backuppc*>
    AuthUserFile /etc/apache2/secrets/backuppc_htpasswd
    AuthType basic
    AuthName "BackupPC Admin"
    require valid-user
</Proxy>

ProxyPass /media http://iot/~tconnors/cgi-bin
ProxyPassReverse /media http://iot/~tconnors/cgi-bin
<Proxy http://iot/~tconnors/cgi-bin*>
    AuthUserFile /etc/apache2/secrets/media_htpasswd
    AuthType basic
    AuthName "Media Admin"
    require valid-user
</Proxy>

ProxyPass /cgi-bin/nut http://iot/cgi-bin/nut
ProxyPassReverse /cgi-bin/nut http://iot/cgi-bin/nut
<Proxy http://iot/cgi-bin/nut*>
    AuthUserFile /etc/apache2/secrets/nut_htpasswd
    AuthType basic
    AuthName "Nut Admin"
    require valid-user
</Proxy>
# 2023/12/18 prior to fs->iot migration, there was unused (because shed is currently unused) in global_public_html (so ~dirac's/public_html)/private-cgi-bin/.htaccess:
# RewriteRule (open|close|isopen|distance|toggle|uptime|when_closed)$ http://shed/$1 [L,P]
# It would be better to move that here and have it monitored by fail2ban when we reinstate shed

ProxyPass /home http://dirac/home
ProxyPassReverse /home http://dirac/home
#NOVNC configuration:
# Other configuration is set in ~/bin/startup/mystuff.sh, and by extension, restartx11vnc from startmaindisplay.sh
#        ProxyPass /home/ http://dirac:6080/
#        ProxyPassReverse /home/ http://dirac:6080/
ProxyPass /websockify-pi ws://dirac:6080/websockify retry=0
ProxyPassReverse /websockify-pi ws://dirac:6080/websockify retry=0
ProxyPass /websockify-pi-hor ws://dirac:6079/websockify retry=0
ProxyPassReverse /websockify-pi-hor ws://dirac:6079/websockify retry=0

# But serve out noVNC's javascript etc files through apache normally, to allow cache control outside of websockify's webserver

#        ProxyPass /home-fs/ http://dirac:6081/
#        ProxyPassReverse /home-fs/ http://dirac:6081/
ProxyPass /websockify-fs ws://dirac:6081/websockify retry=0
ProxyPassReverse /websockify-fs ws://dirac:6081/websockify retry=0

ProxyPass /websockify-dirac1 ws://dirac:6082/websockify retry=0
ProxyPassReverse /websockify-dirac1 ws://dirac:6082/websockify retry=0

ProxyPass /websockify-dirac2 ws://dirac:6083/websockify retry=0
ProxyPassReverse /websockify-dirac2 ws://dirac:6083/websockify retry=0

ProxyPass /websockify-dirac-blank ws://dirac:6084/websockify retry=0
ProxyPassReverse /websockify-dirac-blank ws://dirac:6084/websockify retry=0

#    ProxyPass /homey/ http://homeassistant/
#    ProxyPassReverse /homey/ http://homeassistant/
