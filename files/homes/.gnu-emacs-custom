(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(ansi-color-names-vector
   ["#2e3436" "#a40000" "#4e9a06" "#c4a000" "#204a87" "#5c3566" "#729fcf" "#eeeeec"])
 '(appt-announce-method 'appt-persistent-message-announce t)
 '(appt-check-time-syntax nil t)
 '(appt-display-duration 60)
 '(appt-mode-line-string
   "Danger, Will Robinson! You have an appointment to attend to!")
 '(auth-source-save-behavior nil)
 '(auto-save-file-name-transforms
   '(("\\`/[^/]*:\\([^/]*/\\)*\\([^/]*\\)\\'" "~/.emacs.d/auto-save/\\2" t)))
 '(backup-directory-alist '(("." . "~/.emacs.d/auto-save/")))
 '(buffers-menu-grouping-function 'group-buffers-menu-by-mode-then-alphabetically)
 '(buffers-menu-sort-function 'sort-buffers-menu-by-mode-then-alphabetically)
 '(buffers-menu-submenus-for-groups-p t)
 '(calendar-date-style 'european)
 '(calendar-mark-diary-entries-flag t)
 '(calendar-view-diary-initially-flag t)
 '(case-fold-search t)
 '(column-number-mode t)
 '(compilation-message-face 'default)
 '(cperl-electric-keywords nil)
 '(cperl-electric-linefeed nil)
 '(cperl-electric-parens nil)
 '(cperl-hairy nil)
 '(create-lockfiles nil)
 '(cua-global-mark-cursor-color "#2aa198")
 '(cua-normal-cursor-color "#839496")
 '(cua-overwrite-cursor-color "#b58900")
 '(cua-read-only-cursor-color "#859900")
 '(custom-safe-themes
   '("4f5b1a345c4a65ee7299cebae25b75b4793a8e2d0f5d84ce070205ff64536f1a" default))
 '(default-frame-alist
    '((right-divider-width . 6)
      (horizontal-scroll-bars)
      (left-fringe . 1)
      (right-fringe . 1)))
 '(delete-old-versions t)
 '(delete-selection-mode nil nil (delsel))
 '(diary-file "~/diary")
 '(diary-number-of-entries [1 1 1 1 1 3 2])
 '(diary-show-holidays-flag nil)
 '(diff-switches "-u")
 '(dired-dwim-target t)
 '(dired-face-flagged ((((class color)) (:background "darkslateGray"))))
 '(dired-face-marked ((((class color)) (:background "VioletRed"))))
 '(dired-kept-versions 10)
 '(display-battery-mode t)
 '(display-time-display-time-background "green0")
 '(display-time-display-time-foreground "tomato")
 '(display-time-ignore-read-mail nil)
 '(display-time-interval 30)
 '(display-time-mail-file "~/Mail/inbox")
 '(display-time-mode t)
 '(enable-recursive-minibuffers t)
 '(european-calendar-style t t)
 '(f90-auto-keyword-case 'upcase-word)
 '(f90-beginning-ampersand nil)
 '(f90-leave-line-no nil)
 '(fci-rule-color "#073642")
 '(find-file-compare-truenames t)
 '(focus-follows-mouse t)
 '(fortran-blink-matching-if nil)
 '(fortran-continuation-string "&")
 '(frame-background-mode 'dark)
 '(fringe-mode '(1 . 1) nil (fringe))
 '(grip-update-after-change nil)
 '(highlight-changes-colors '("#d33682" "#6c71c4"))
 '(highlight-nonselected-windows t)
 '(highlight-symbol-colors
   (--map
    (solarized-color-blend it "#002b36" 0.25)
    '("#b58900" "#2aa198" "#dc322f" "#6c71c4" "#859900" "#cb4b16" "#268bd2")))
 '(highlight-symbol-foreground-color "#93a1a1")
 '(highlight-tail-colors
   '(("#073642" . 0)
     ("#546E00" . 20)
     ("#00736F" . 30)
     ("#00629D" . 50)
     ("#7B6000" . 60)
     ("#8B2C02" . 70)
     ("#93115C" . 85)
     ("#073642" . 100)))
 '(hl-bg-colors
   '("#7B6000" "#8B2C02" "#990A1B" "#93115C" "#3F4D91" "#00629D" "#00736F" "#546E00"))
 '(hl-fg-colors
   '("#002b36" "#002b36" "#002b36" "#002b36" "#002b36" "#002b36" "#002b36" "#002b36"))
 '(ibuffer-default-shrink-to-minimum-size t)
 '(ibuffer-default-sorting-mode 'recency)
 '(ido-enable-prefix t)
 '(indent-tabs-mode nil)
 '(indicate-buffer-boundaries 'right)
 '(initial-frame-alist '((top . 1) (left . 450) (width . 101) (height . 70)))
 '(ispell-alternate-dictionary "~/british_dict")
 '(ispell-complete-word-dict "~/british_dict")
 '(ispell-extra-args '("-t"))
 '(iswitchb-buffer-ignore
   '("^ " "^*Calendar*" "^*Fancy Diary Entries*" "^*Completions*" "^*Ibuffer*" "^*tramp/"))
 '(iswitchb-default-method 'samewindow)
 '(kept-new-versions 10)
 '(kept-old-versions 10)
 '(kill-buffer-delete-auto-save-files t)
 '(kill-do-not-save-duplicates t)
 '(line-move-visual nil)
 '(longlines-show-hard-newlines t)
 '(magit-auto-revert-mode nil)
 '(magit-diff-use-overlays nil)
 '(number-of-diary-entries [1 1 1 1 1 3 2])
 '(password-cache-expiry nil)
 '(pos-tip-background-color "#073642")
 '(pos-tip-foreground-color "#93a1a1")
 '(power-macros-file "~/.xemacs/macros.el")
 '(preview-image-type 'dvipng)
 '(remote-file-name-inhibit-locks t)
 '(require-final-newline t)
 '(safe-local-variable-values '((case-label . 4) (c-basic-indent . 4)))
 '(save-interprogram-paste-before-kill t)
 '(scroll-bar-mode 'right)
 '(send-mail-function 'sendmail-send-it)
 '(session-use-package t nil (session))
 '(set-mark-default-inactive t)
 '(show-paren-mode t nil (paren))
 '(size-indication-mode t)
 '(smartrep-mode-line-active-bg (solarized-color-blend "#859900" "#073642" 0.2))
 '(sml/mode-width (if (eq (powerline-current-separator) 'arrow) 'right 'full))
 '(sml/pos-id-separator
   '(""
     (:propertize " " face powerline-active1)
     (:eval
      (propertize " " 'display
                  (funcall
                   (intern
                    (format "powerline-%s-%s"
                            (powerline-current-separator)
                            (car powerline-default-separator-dir)))
                   'powerline-active1 'powerline-active2)))
     (:propertize " " face powerline-active2)))
 '(sml/pos-minor-modes-separator
   '(""
     (:propertize " " face powerline-active1)
     (:eval
      (propertize " " 'display
                  (funcall
                   (intern
                    (format "powerline-%s-%s"
                            (powerline-current-separator)
                            (cdr powerline-default-separator-dir)))
                   'powerline-active1 'sml/global)))
     (:propertize " " face sml/global)))
 '(sml/pre-id-separator
   '(""
     (:propertize " " face sml/global)
     (:eval
      (propertize " " 'display
                  (funcall
                   (intern
                    (format "powerline-%s-%s"
                            (powerline-current-separator)
                            (car powerline-default-separator-dir)))
                   'sml/global 'powerline-active1)))
     (:propertize " " face powerline-active1)))
 '(sml/pre-minor-modes-separator
   '(""
     (:propertize " " face powerline-active2)
     (:eval
      (propertize " " 'display
                  (funcall
                   (intern
                    (format "powerline-%s-%s"
                            (powerline-current-separator)
                            (cdr powerline-default-separator-dir)))
                   'powerline-active2 'powerline-active1)))
     (:propertize " " face powerline-active1)))
 '(sml/pre-modes-separator (propertize " " 'face 'sml/modes))
 '(tcl-indent-level 3)
 '(term-default-bg-color "#002b36")
 '(term-default-fg-color "#839496")
 '(toggle-option-list
   '((require-final-newline buffer-var nil
                            (nil t 'ask))
     (truncate-partial-width-windows buffer-var nil nil)
     (auto-fill-mode function nil nil)
     (truncate-lines buffer-var nil nil)))
 '(tool-bar-mode nil)
 '(tramp-auto-save-directory "~/.emacs.d/trampautosave")
 '(tramp-default-proxies-alist
   '(("^(archerc7|archerc72|archerd7|asusrtax53u|b1300)$" ".*" "/scp:root@:%h:")
     ("^.*$" "^root$" "/ssh:%h:")
     ((regexp-quote
       (system-name))
      nil nil)))
 '(tramp-histfile-override "~/.tramp_history")
 '(tramp-verbose 4)
 '(transient-mark-mode nil)
 '(truncate-lines nil)
 '(truncate-partial-width-windows t)
 '(undo-high-threshold 512000)
 '(undo-limit 800000)
 '(undo-threshold 512000)
 '(uniquify-buffer-name-style 'post-forward-angle-brackets nil (uniquify))
 '(user-mail-address "tim.w.connors@gmail.com")
 '(vc-annotate-background nil)
 '(vc-annotate-color-map
   '((20 . "#dc322f")
     (40 . "#c85d17")
     (60 . "#be730b")
     (80 . "#b58900")
     (100 . "#a58e00")
     (120 . "#9d9100")
     (140 . "#959300")
     (160 . "#8d9600")
     (180 . "#859900")
     (200 . "#669b32")
     (220 . "#579d4c")
     (240 . "#489e65")
     (260 . "#399f7e")
     (280 . "#2aa198")
     (300 . "#2898af")
     (320 . "#2793ba")
     (340 . "#268fc6")
     (360 . "#268bd2")))
 '(vc-annotate-very-old-color nil)
 '(vc-follow-symlinks t)
 '(version-control t)
 '(visual-line-fringe-indicators '(left-curly-arrow right-curly-arrow))
 '(visual-line-mode nil t)
 '(vline-global-mode nil)
 '(vline-idle-time 1)
 '(vline-use-timer t)
 '(weechat-color-list
   '(unspecified "#002b36" "#073642" "#990A1B" "#dc322f" "#546E00" "#859900" "#7B6000" "#b58900" "#00629D" "#268bd2" "#93115C" "#d33682" "#00736F" "#2aa198" "#839496" "#657b83"))
 '(which-function-mode t)
 '(window-divider-mode t)
 '(word-wrap t)
 '(xterm-extra-capabilities '(modifyOtherKeys reportBackground)))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(default ((t (:inherit nil :stipple nil :background "black" :foreground "sea green" :inverse-video nil :box nil :strike-through nil :overline nil :underline nil :slant normal :weight normal :height 108 :width normal :foundry "PfEd" :family "DejaVu Sans Mono"))))
 '(border ((t nil)))
 '(custom-comment ((t (:background "dark grey" :foreground "darkgreen"))))
 '(diff-context-face ((((background light)) (:foreground "grey50"))) t)
 '(diff-file-header-face ((((background light)) (:background "grey70" :foreground "grey20" :weight bold))) t)
 '(diff-header-face ((((background light)) (:background "grey85" :foreground "grey30"))) t)
 '(diff-hunk-header-face ((((background light)) (:background "grey85" :foreground "grey30"))) t)
 '(display-time-mail-balloon-enhance-face ((t (:background "darkorange"))))
 '(font-latex-bold-face ((((class color)) (:foreground "DarkSeaGreen" :bold t))))
 '(font-latex-math-face ((((class color)) (:foreground "BlanchedAlmond"))))
 '(font-lock-comment-face ((t (:foreground "lightblue4"))))
 '(font-lock-doc-string-face ((((class color)) (:foreground "green"))))
 '(font-lock-emphasized-face ((t (:background "yellow4" :size "nil" :bold t))) t)
 '(font-lock-function-name-face ((((class color)) (:foreground "SandyBrown"))))
 '(font-lock-keyword-face ((t (:foreground "red"))))
 '(font-lock-other-emphasized-face ((t (:background "yellow3" :size "nil" :bold t))) t)
 '(font-lock-preprocessor-face ((((class color)) (:foreground "cornflower blue"))))
 '(font-lock-reference-face ((((class color)) (:foreground "lightcoral"))))
 '(font-lock-string-face ((((class color)) (:foreground "green"))))
 '(font-lock-type-face ((((class color)) (:foreground "steelblue"))))
 '(font-lock-variable-name-face ((((class color)) (:foreground "magenta"))))
 '(fringe ((t (:background "gray10"))))
 '(highlight ((t (:foreground "white" :background "seagreen"))))
 '(internal-border ((t nil)))
 '(isearch ((t (:foreground "black" :background "green"))))
 '(list-mode-item-selected ((t (:background "gray38"))) t)
 '(mmm-code-submode-face ((t (:background "#333333"))))
 '(mmm-default-submode-face ((t (:background "gray20"))))
 '(mode-line ((t (:foreground "green" :background "dark slate grey"))))
 '(mode-line-inactive ((t (:weight light :box (:line-width (1 . -1) :color "gray40") :inverse-video t :foreground "grey30" :background "grey10" :inherit mode-line))))
 '(primary-selection ((t (:background "gray25"))) t)
 '(rainbow-delimiters-depth-2-face ((t (:foreground "#c36846"))))
 '(rainbow-delimiters-depth-3-face ((t (:foreground "#40b143"))))
 '(rainbow-delimiters-depth-4-face ((t (:foreground "#4740c8"))))
 '(rainbow-delimiters-depth-5-face ((t (:foreground "#cece48"))))
 '(rainbow-delimiters-depth-6-face ((t (:foreground "#40b0b3"))))
 '(rainbow-delimiters-depth-7-face ((t (:foreground "#b048c0"))))
 '(rainbow-delimiters-depth-8-face ((t (:foreground "#d2b6da"))))
 '(scroll-bar ((t (:background "grey17" :foreground "white"))))
 '(secondary-selection ((t (:background "darkgreen"))))
 '(strokes-char-face ((t (:background "gray20"))))
 '(text-cursor ((t (:foreground "blue" :background "cyan"))) t)
 '(tool-bar ((t (:foreground "white" :background "Gray80"))))
 '(vline ((t (:background "gray15"))))
 '(vline-visual ((t (:background "gray20"))))
 '(vvb-face ((t (:background "red4"))) t)
 '(which-func ((t (:foreground "yellow1"))))
 '(widget-field ((((class grayscale color)) (:background "blue"))))
 '(window-divider ((t (:foreground "midnight blue"))))
 '(window-divider-first-pixel ((t (:foreground "gray8"))))
 '(window-divider-last-pixel ((t (:foreground "gray11"))))
 '(zmacs-region ((t (:background "gray30"))) t))
; '(default ((t (:height 98 :foundry "bitstream" :family "Bitstream Vera Sans Mono"))))
