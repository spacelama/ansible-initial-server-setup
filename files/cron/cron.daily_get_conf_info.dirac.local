#!/bin/bash -l

# collects config from miscellaneous devices from just one "master" node.
# Takes $1 as the temporary directory we're writing to, and
# $2 being where the directory will end up (ie, will otherwise
# contains yesterday's full run)

set -u
exit=0
hostname=`hostname`
trap 'echo "ERROR: $hostname:$0: $LINENO: $BASH_COMMAND"; exit=1' ERR

data_dir="$1"
data_dir_dest="$2"

cd "$data_dir" || exit 1
mkdir -p tasmota
cd tasmota || exit 1
tasmota_read_success=false
while read h ; do
    output=$(
        (
            decode-config.py -o "$h.json" -t json --json-indent 2 --source "$h" || echo decode-config.py json failed: "$h"
            # because of bugs like
            # https://github.com/tasmota/decode-config/issues/93,
            # perhaps .dmp and .bin format backups are more complete
            # than the textual representation, so store them as well.
            # They all must succeed for the backup to be regarded
            # successful
            decode-config.py -o "$h.dmp" -t dmp --source "$h" || echo decode-config.py dmp failed: "$h"
            decode-config.py -o "$h.bin" -t bin --source "$h" || echo decode-config.py bin failed: "$h"
        ) 2>&1 ) || true
#    if [ -n "$error" ] && ! nodeattr -l $h | grep -q not247 ; then
#        echo "$error"
#    fi
    if [[ "$output" == *ERROR* ]] ; then # no versions of decode-config seem to output an error code for unknown reasons (LogType quite clearly calls sys.exit with same error code that was printed out)
        # attempt to copy yesterday's dump, but we need to work out
        # how to flag in a non-obtrusive manner that we should
        # occasionally deliberately get a known good dump

        cp -a "$data_dir_dest/tasmota/$h.json" "$h.json"
        cp -a "$data_dir_dest/tasmota/$h.dmp" "$h.dmp"
        cp -a "$data_dir_dest/tasmota/$h.bin" "$h.bin"
    else
        tasmota_read_success=true
    fi
done < <( nodeattr -n tasmota )

if ! $tasmota_read_success ; then
    echo "Failed to read at least one tasmota device correctly, implying the scripts have broken again.  Thought about installing python3-configargparse?"
    exit=1
fi

cd "$data_dir"

get_conf_info.switch

exit $exit
