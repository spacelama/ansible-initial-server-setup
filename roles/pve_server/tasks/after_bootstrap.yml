---
- name: Ensures ~ansible/Downloads dir exists
  file:
    path: "/home/{{ ansible_env.USER }}/Downloads"
    state: directory
  when: in_bootstrap is not defined

- name: copy pve-nag-buster/install.sh to pve
  copy:
    src: /home/tconnors/code/proxmox/pve-nag-buster/install.sh
    dest: "/home/{{ ansible_env.USER }}/Downloads/pve-nag-buster-install.sh"
    mode: 0755
  register: pve_nag_buster_changed
  when: in_bootstrap is not defined

- name: install the pve nag buster
  command: /home/{{ ansible_env.USER }}/Downloads/pve-nag-buster-install.sh --offline
  become: true
  when: in_bootstrap is not defined and ( not pve_enterprise_nag_buster.stat.exists or pve_nag_buster_changed.changed )
  register: pve_nag_installed

- name: Purge some incompatible packages
  apt:
    name: ['ifupdown']   # some stale config files left from automatic
                         # removal of ifupdown stop network from
                         # coming up, so make sure the package is
                         # purged first (ifupdown2 needs to be
                         # reinstalled afterwards, so let's just try
                         # to do it second anyway.  Could leave with
                         # an unbootable system if that fails!)
    state: absent
    purge: true
  become: true
  when: in_bootstrap is not defined

#  FIXME: pve7to8
- name: Install pve prereq packages
  apt:
    name: ['dkms', 'pve-headers', 'ifupdown2']
    autoremove: no
    state: present
    install_recommends: no
  become: true
  when: in_bootstrap is not defined

- name: Ensures ~ansible/Downloads/vendor-reset-225a49a dir exists
  file:
    path: "/home/{{ ansible_env.USER }}/Downloads/vendor-reset-225a49a"
    state: directory
  when: in_bootstrap is not defined

- name: copy AMD graphics vendor-reset to pve
  unarchive:
    src: /home/tconnors/code/vendor-reset-225a49a.tar
    dest: "/home/{{ ansible_env.USER }}/Downloads/vendor-reset-225a49a"
    extra_opts:
    - --transform
    - s/^vendor-reset//
  register: vendor_reset_changed
  # want to rethink this, but in check_mode, we can't hope to unpack
  # the archive when the user doesn't yet exist
  when: not ansible_check_mode and in_bootstrap is not defined and not vendor_reset_dkms.stat.exists

- name: install AMD graphics vendor-reset to pve
#  command: bash -c 'cd Downloads/vendor-reset-225a49a ; dkms install .'
  command: dkms install .
  args:
    chdir: /home/{{ ansible_env.USER }}/Downloads/vendor-reset-225a49a
  become: true
  # want to rethink this, but in check_mode, we can't hope to unpack
  # the archive when the archive isn't yet unpacked
  when: not ansible_check_mode and in_bootstrap is not defined and ( not vendor_reset_dkms.stat.exists or vendor_reset_changed.changed )
  # FIXME: we want to ignore errors, but above test will fail and we
  # then won't install a second time when we have a more favourable
  # environment
  ignore_errors: true  # fails when not in systemd, or still in the
                       # installation environment, etc

- name: Install virtual host tools
  apt:
    # https://pve.proxmox.com/wiki/Install_Proxmox_VE_on_Debian_Jessie
    name: ['proxmox-ve', 'ssh', 'postfix', 'ksm-control-daemon', 'open-iscsi', 'systemd-sysv', 'munin-libvirt-plugins', 'targetcli-fb', 'powertop', 'libguestfs-tools', 'hwloc', 'numad'] # 'virt-goodies',
#, 'swapspace']
#    FIXME: run tuned-adm profile powersave or perhaps virtual-host # https://www.reddit.com/r/Proxmox/comments/uc53m7/4port_j4125_pc_how_to_run_proxmox_with_lowpower/
    update_cache: yes
    cache_valid_time: 3600
    autoremove: no
    state: present
  become: true
  when: in_bootstrap is not defined

- name: mount media
  mount:
    path: /media
    src: fs:/home/tconnors/movies/media
    fstype: nfs4
    opts: defaults,_netdev,x-systemd.automount
    state: mounted
  become: true
  when: in_bootstrap is not defined
  ignore_errors: true  # fails when not in systemd, or still in the
                       # installation environment, etc

- name: mount media transcodes
  mount:
    path: /media_transcodes
    src: fs:/home/tconnors/movies/media_transcodes
    fstype: nfs4
    opts: defaults,_netdev,x-systemd.automount
    state: mounted
  become: true
  when: in_bootstrap is not defined
  ignore_errors: true  # fails when not in systemd, or still in the
                       # installation environment, etc

- name: ensure SMR drives have a longer timeout
  copy:
     content: "ACTION==\"add\", SUBSYSTEM==\"block\",  ENV{ID_MODEL}==\"ST8000AS0002*\", RUN+=\"/bin/sh -c 'echo 60 > /sys/block/%k/device/timeout'\"\n"
     # find string with `udevadm test /sys/class/block/sdf`
     # also tells you whether it appended RUN appropriately
     dest: /etc/udev/rules.d/90-SMR-drive-timeout.rules
  become: true
  when: in_bootstrap is not defined

- name: install suspend-all
  copy:
    src: pve_server/{{ item }}
    dest: /usr/local/bin/{{ item }}
    owner: root
    group: root
    mode: 0755
  become: true
  with_items:
    - suspend-all
  when: in_bootstrap is not defined

  # FIXME: there are no non-zfs partitions on pve where there's enough space for swapspace to operate
#- name: Ensures /var/lib/swapspace 0700
#  file:
#    path="/var/lib/swapspace"
#    state=directory
#    mode=0700
#  become: true

# these smart_ links are in addition to those handled by munin_suggest_plugin.yml, which appears to ignore devices that are sent through to VMs (where we still have to run the smart queries from)
- name: ensure all munin smart links are in place
  file:
    src: /usr/share/munin/plugins/smart_
    dest: "/etc/munin/plugins/smart_sd{{ item }}"
    state: link
  become: true
  with_items: { a, b, c, d, e, f, g, h, i, j, k, l, m, n }
  when: in_bootstrap is not defined

- name: set pve-ha-lrm/pve-ha-crm disabled when on HA or enabled when on HA, to alleviate constant disk writes by pmxcfs to SSD
  # https://forum.proxmox.com/threads/pmxcfs-writing-to-disk-all-the-time.35828/ https://www.reddit.com/r/Proxmox/comments/i8e5fi/excessive_nvme_wear_out/g193xr2/
  service:
    name: "{{ item }}"
    enabled: "{{ ( host_is_in_pve_cluster is defined and host_is_in_pve_cluster ) | ternary('yes', 'no') }}"
    state: "{{ ( host_is_in_pve_cluster is defined and host_is_in_pve_cluster ) | ternary('started', 'stopped') }}"
  become: true
  with_items:
    - pve-ha-lrm
    - pve-ha-crm
  when: in_bootstrap is not defined
  ignore_errors: true  # fails when not in systemd, or still in the
                       # installation environment, etc

- name: reduce frequent writes by pvesr.timer
  # https://forum.proxmox.com/threads/replication-runner-syslog.35600/
  copy:
    content: "[Unit]\nDescription=Proxmox VE replication runner\n\n[Timer]\nAccuracySec=1\nRemainAfterElapse=no\n\n[Timer]\nOnCalendar=*:0/15\n\n[Install]\nWantedBy=timers.target\n"
    dest: /etc/systemd/system/pvesr.timer
  become: true
  when: in_bootstrap is not defined

- name: Setup pve users
  copy:
     content: "user:root@pam:1:0:::tim.w.connors@gmail.com:::\n{{ pve_users | join('\n') }}\n"
     dest: /etc/pve/user.cfg
     mode: "0640"
     unsafe_writes: true # needed because of the /etc/pve fuse filesystem
  become: true
  when: in_bootstrap is not defined

