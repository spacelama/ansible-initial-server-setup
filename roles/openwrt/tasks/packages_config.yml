---
- name: remove conflicting and/or obsolete packages
  # if want to go back to DAWN later, it is now better documented: https://github.com/berlin-open-wireless-lab/DAWN/blob/master/CONFIGURE.md
  # also, here: https://www.reddit.com/r/openwrt/comments/v26ybu/dawn_vs_usteer/
  opkg:
    name: luci-app-dawn,dawn,wpad-basic-mbedtls
    # wpad-basic-mbedtls conflicts with hostapd-mbedtls
    # https://forum.openwrt.org/t/why-return-to-mbed-tls/162957/4
    state: absent

- name: install compulsory packages
  opkg:
    name: bash,muninlite,rsync
    state: present

- name: install router configuration
  block:
    - name: install router packages
      opkg:
        name: luci-app-sqm,avahi-dbus-daemon,adblock,luci-app-adblock,msmtp,ethtool,arp-scan,ifstat,bind-dig,darkstat,luci-app-nlbwmon,luci-app-statistics,vnstat,vnstati,ip-bridge,bridge # ip-bridge is for `bridge vlan` command, bridge gives more complete control of brctl
        # instead of port mirroring, perhaps we can configure ecowitt mirroring of port 8000->homeassistant:4199 via port forwards ,port-mirroring
        state: present

    #FIXME: kmod-wireguard?

    - name: configure msmtp
      lineinfile:
        dest: /etc/msmtprc
        regexp: "^host "
        line: "host smtp.{{ domain }}"
    - lineinfile:
        dest: /etc/msmtprc
        regexp: "^port "
        line: "port 25"
    - lineinfile:
        dest: /etc/msmtprc
        regexp: "^tls "
        line: "tls off"
    - lineinfile:
        dest: /etc/msmtprc
        regexp: "^tls_starttls "
        line: "tls_starttls off"
    - lineinfile:
        dest: /etc/msmtprc
        regexp: "^from "
        line: "from %U@{{ inventory_hostname }}.{{ domain }}"

    - name: install router packages that were failing at one point
      opkg:
        # kmod-tcp-bbr was on b1300 prior to 21.02.1 upgrade - no idea how
        # it got there
        name: luci-app-vnstat,luci-app-banip
        state: present
      ignore_errors: true

    - name: setup avahi zeroconf DNS reflector for chromecast
      # roughly per
      # https://forum.openwrt.org/t/bridging-mdns-between-networks/113840/19
      # firewall is already configured, so just ensure /etc/config/ is
      # copied when migrating to new gateway next time
      #copy:
      #  src: etc_avahi_avahi-daemon.conf
      #  dest: /etc/avahi/avahi-daemon.conf
      lineinfile:
        dest: /etc/avahi/avahi-daemon.conf
        regexp: '^#*host-name='
        line: "host-name={{ inventory_hostname }}"
        insertafter: '^#host-name='
    - lineinfile:
        dest: /etc/avahi/avahi-daemon.conf
        regexp: '^#*domain-name='
        line: "domain-name={{ domain }}"
        insertafter: '^#domain-name='
    - lineinfile:
        dest: /etc/avahi/avahi-daemon.conf
        regexp: '^#*enable-dbus='
        line: 'enable-dbus=yes'
        insertafter: 'use-iff-running='
    - lineinfile:
        dest: /etc/avahi/avahi-daemon.conf
        regexp: '^#*allow-interfaces='
        line: "allow-interfaces={{ allow_avahi_zeroconf_interfaces }}"
        insertafter: 'enable-dbus='
    - lineinfile:
        dest: /etc/avahi/avahi-daemon.conf
        regexp: '^#*publish-dns-servers='
        line: "publish-dns-servers={{ avahi_zeroconf_public_dns_servers }}"
        insertafter: "^#publish-dns-servers="
    - lineinfile:
        dest: /etc/avahi/avahi-daemon.conf
        regexp: '^#*publish-resolv-conf-dns-servers'
        line: "publish-resolv-conf-dns-servers=yes"
        insertafter: '^#publish-resolv-conf-dns-servers='
    - lineinfile:
        dest: /etc/avahi/avahi-daemon.conf
        regexp: '^#*enable-reflector='
        line: 'enable-reflector=yes'
        insertafter: '^#enable-relfector='

    # https://www.reddit.com/r/openwrt/comments/wdkp8t/new_to_openwrt_active_connections_constantly/
    # monitor /proc/net/nf_conntrack
    # Bump RAM up on the VM to 512MB too
    - name: Ensure netfilter connection tracking suffices
      lineinfile:
        dest: /etc/sysctl.conf
        regexp: '^net.netfilter.nf_conntrack_max='
        line: 'net.netfilter.nf_conntrack_max=65535'
  when: type == "router"

  # https://openwrt.org/docs/guide-user/network/wifi/usteer talks
  # about needing wpad full (wpad-wolfssl or wpad-openssl), but we
  # haven't had that installed for a few versions, and doesn't seem to
  # be causing any problems?  openwrt 23.05.0 may want something in
  # place of wpad-wolfssl, since it's moved from wolfssl to mbedtls
- name: install AP packages
  opkg:
    name: usteer,luci-app-usteer,hostapd-mbedtls
    # hostapd-mbedtls seems to be needed by some APs with 23.05.3
    # otherwise device doesn't get renamed from wlan0 and nothing
    # comes up?:
    # https://www.reddit.com/r/openwrt/comments/1793zzl/2305_changed_wireless_device_names_from_wlan0_to/
    # https://forum.openwrt.org/t/why-return-to-mbed-tls/162957/4
    state: present
  when: type == "ap"

- name: install full packages
  opkg:
    name: luci-mod-dashboard,lldpd,luci-app-lldpd,tcpdump,strace,lsof,usbutils,ethtool,mii-tool,psmisc,procps-ng-ps,procps-ng-watch,procps-ng-vmstat,procps-ng-top,iftop,htop,btop,less,diffutils,perl,perlbase-tie,perlbase-getopt,ip-tiny,coreutils-stat # perlbase-tie for munin sensors_, perlbase-getopt for colordiff, ip-tiny so we get at least `ip -c a` instead of busybox version, but other alternative we haven't needed yet is ip-full, coreutils-stat for stat for our shell script's use
    state: present
  when: openwrt_heavy_installation | default(true)

- name: install host specific packages
  opkg:
    # comma separated, single variable
    name: "{{ packages_to_install }}"
    state: present
  when: packages_to_install is defined

- name: install nut packages
  opkg:
    name: luci-app-nut,nut,nut-upscmd,nut-upsc,nut-upslog,nut-server,nut-driver-blazer_usb,nut-driver-usbhid-ups,nut-upssched,nut-avahi-service,nut-upsrw,nut-web-cgi
    state: present
  when: nut_install | default(false)

- name: install nut munin plugins
  file:
    src: /root/bin/nutups_
    dest: "/etc/munin/plugins/nutups_powershield_{{ item }}"
    state: link
    force: yes
  with_items: [ charge,voltages,freq,current ]
  when: nut_install | default(false)

- name: install temperature sensors munin plugin
  file:
    src: /root/bin/sensors_
    dest: "/etc/munin/plugins/sensors_temp"
    state: link
    force: yes
  when: '"lm-sensors" in packages_to_install'

- name: "ensure dnsmasq service {{ 'started' if inventory_hostname != 'gateway-tmp' else 'stopped' }} for {{ inventory_hostname }}"
  service:
    name: dnsmasq
    state: "{{ 'started' if inventory_hostname != 'gateway-tmp' else 'stopped' }}"

- name: setup dhcp reservations
  copy:
    dest: /etc/config/dhcp
    content: "# ANSIBLE template dhcp.head.{{ type }}.j2\n{{ lookup('template', 'dhcp.head.{{ type }}.j2')}}\n\n# ANSIBLE template dhcp.reservations.j2\n{{lookup('template', 'dhcp.reservations.j2') }}\n"
  notify: restart dnsmasq

- name: No need for /etc/dnsmasq.tmphosts anymore
  file:
    dest: /etc/dnsmasq.tmphosts
    state: absent

- name: setup dnsmasq hosts
  template:
    dest: /etc/dnsmasq.hosts
    src: dnsmasq.hosts.j2
  notify: restart dnsmasq

- name: set root account passwd
  lineinfile:
    dest: /etc/passwd
    regexp: "^root:"
    line: "root:x:0:0:root:/root:/bin/bash"
- name: set root account shadow
  lineinfile:
    dest: /etc/shadow
    regexp: "^root:"
    line: "root:{{ rootshadow }}:18868:0:99999:7:::"
  no_log: true
- name: set rootsh account passwd
  lineinfile:
    dest: /etc/passwd
    regexp: "^rootsh:"
    line: "rootsh:x:0:0:root:/root:/bin/ash"
    insertafter: "^root:"
- name: set rootsh account shadow
  lineinfile:
    dest: /etc/shadow
    regexp: "^rootsh:"
    line: "rootsh:{{ rootshadow }}:18868:0:99999:7:::"
    insertafter: "^root:"
  no_log: true
