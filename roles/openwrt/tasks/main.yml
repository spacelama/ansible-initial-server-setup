---
- name: remove conflicting and/or obsolete packages
  # if want to go back to DAWN later, it is now better documented: https://github.com/berlin-open-wireless-lab/DAWN/blob/master/CONFIGURE.md
  # also, here: https://www.reddit.com/r/openwrt/comments/v26ybu/dawn_vs_usteer/
  opkg:
    name: luci-app-dawn,dawn
    state: absent

- name: install compulsory packages
  opkg:
    name: bash,muninlite,rsync
    state: present

- name: install router packages
  opkg:
    name: luci-app-sqm,avahi-dbus-daemon,adblock,luci-app-adblock,msmtp,crelay,ethtool,arp-scan,ifstat # instead of port mirroring, perhaps we can configure ecowitt mirroring of port 8000->homeassistant:4199 via port forwards ,port-mirroring
    state: present
  when: openwrt_router_packages is defined

- name: install router packages that were failing at one point
  opkg:
    # kmod-tcp-bbr was on b1300 prior to 21.02.1 upgrade - no idea how
    # it got there
    name: luci-app-banip
    state: present
  when: openwrt_router_packages is defined
  ignore_errors: true

  # https://openwrt.org/docs/guide-user/network/wifi/usteer talks
  # about needing wpad full (wpad-wolfssl or wpad-openssl), but we
  # haven't had that installed for a few versions, and doesn't seem to
  # be causing any problems?  openwrt 23.05.0 may want something in
  # place of wpad-wolfssl, since it's moved from wolfssl to mbedtls
- name: install AP packages
  opkg:
    name: usteer
    state: present
  when: type == "ap"

- name: install full packages
  opkg:
    name: tcpdump,strace,lsof,usbutils,ethtool,psmisc,procps-ng-ps,procps-ng-watch,procps-ng-vmstat,iftop,htop
    state: present
  when: openwrt_heavy_installation is defined

- name: install nut packages
  opkg:
    name: luci-app-nut,nut,nut-upscmd,nut-upsc,nut-upslog,nut-server,nut-driver-blazer_usb,nut-driver-usbhid-ups,nut-upssched,nut-avahi-service,nut-upsrw,nut-web-cgi
    state: present
  when: nut_install is defined

- name: install nut munin plugins
  file:
    src: /root/bin/nutups_
    dest: "/etc/munin/plugins/nutups_powershield_{{ item }}"
    state: link
    force: yes
  with_items: [ charge,voltages,freq,current ]
  when: nut_install is defined

- name: setup dhcp reservations
  copy:
    dest: /etc/config/dhcp
    content: "{{ lookup('template', 'dhcp.head.{{ type }}.j2')}}\n\n{{lookup('template', 'dhcp.reservations.j2') }}\n"
  notify: restart dnsmasq

- name: setup dnsmasq hosts
  template:
    dest: /etc/dnsmasq.hosts
    src: dnsmasq.hosts.j2
  notify: restart dnsmasq

- name: setup some custom binaries
  copy:
    dest: "/root/bin/{{ item }}"
    src: "bin/{{ item }}"
    mode: "0755"
  with_items:
    - add-batch-dhcp
    - add-dhcp
    - list-installed-packages
    - log-daily-config
    - show_wifi_clients2.sh
    - show_wifi_clients2.sh.helper
    - show_wifi_clients2.sh.helper2
    - opkg-search
    - nutups_
    - nutups2_

- name: set root account passwd
  lineinfile:
    dest: /etc/passwd
    regexp: "^root:"
    line: "root:x:0:0:root:/root:/bin/bash"
- name: set root account shadow
  lineinfile:
    dest: /etc/shadow
    regexp: "^root:"
    line: "root:{{ rootshadow }}:18868:0:99999:7:::"
  no_log: true
- name: set rootsh account passwd
  lineinfile:
    dest: /etc/passwd
    regexp: "^rootsh:"
    line: "rootsh:x:0:0:root:/root:/bin/ash"
    insertafter: "^root:"
- name: set rootsh account shadow
  lineinfile:
    dest: /etc/shadow
    regexp: "^rootsh:"
    line: "rootsh:{{ rootshadow }}:18868:0:99999:7:::"
    insertafter: "^root:"

- name: include uci config
  include_tasks: uci_config.yml

- name: commit changes
  meta: flush_handlers

#FIXME:  system firewall (only on router, not aps -- except maybe we do want firewall on APs so we can port mirror from ecowitt to multiple places, except that we can't mirror TCP streams because of handshakes)
