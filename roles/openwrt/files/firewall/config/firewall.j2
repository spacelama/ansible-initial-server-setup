
config defaults
	option input 'ACCEPT'
	option output 'ACCEPT'
	option forward 'REJECT'
	option drop_invalid '1'
	option synflood_protect '1'

config zone
	option name 'lan'
	option network 'LAN1'
	option input 'ACCEPT'
	option output 'ACCEPT'
	option forward 'ACCEPT'

config zone
	option name 'GUESTLAN'
	option network 'LANGUEST3'
	option input 'ACCEPT'
	option output 'ACCEPT'
	option forward 'ACCEPT'
	option log '1'

config zone
	option name 'WINDOWSLAN'
	option network 'LANWINDOWS7'
	option input 'ACCEPT'
	option output 'ACCEPT'
	option forward 'ACCEPT'

config zone
	option name 'IOTLAN'
	option network 'LANIOT4'
	option input 'ACCEPT'
	option output 'ACCEPT'
	option forward 'ACCEPT'
	option log '1'

config zone
	option name 'wan'
	option network 'wan6 wan'
	option input 'REJECT'
	option output 'ACCEPT'
	option forward 'REJECT'
	option masq '1'
	option mtu_fix '1'

config forwarding
	option src 'lan'
	option dest 'wan'

config forwarding
	option src 'GUESTLAN'
	option dest 'wan'

config forwarding
	option src 'lan'
	option dest 'GUESTLAN'

config forwarding
	option src 'lan'
	option dest 'IOTLAN'

config forwarding
	option src 'WINDOWSLAN'
	option dest 'wan'

config forwarding
	option src 'WINDOWSLAN'
	option dest 'IOTLAN'

config forwarding
	option src 'lan'
	option dest 'WINDOWSLAN'

config forwarding
	option src 'IOTLAN'
	option dest 'wan'

config rule
	option name 'Allow-DHCP-Renew'
	option src 'wan'
	option proto 'udp'
	option family 'ipv4'
	option target 'ACCEPT'
	option dest_port '68'

config rule
	option name 'Allow-Ping'
	option src 'wan'
	option proto 'icmp'
	option icmp_type 'echo-request'
	option family 'ipv4'
	option target 'ACCEPT'

config rule
	option name 'Allow-IGMP'
	option src 'wan'
	option proto 'igmp'
	option family 'ipv4'
	option target 'ACCEPT'

config rule
	option name 'Allow-DHCPv6'
	option src 'wan'
	option src_ip 'fc00::/6'
	option proto 'udp'
	option family 'ipv6'
	option target 'ACCEPT'
	option dest_ip 'fc00::/6'
	option dest_port '546'

config rule
	option name 'Allow-MLD'
	option src 'wan'
	option src_ip 'fe80::/10'
	option proto 'icmp'
	list icmp_type '130/0'
	list icmp_type '131/0'
	list icmp_type '132/0'
	list icmp_type '143/0'
	option family 'ipv6'
	option target 'ACCEPT'

config rule
	option name 'Allow-ICMPv6-Input'
	option src 'wan'
	option proto 'icmp'
	list icmp_type 'echo-request'
	list icmp_type 'echo-reply'
	list icmp_type 'destination-unreachable'
	list icmp_type 'packet-too-big'
	list icmp_type 'time-exceeded'
	list icmp_type 'bad-header'
	list icmp_type 'unknown-header-type'
	list icmp_type 'router-solicitation'
	list icmp_type 'neighbour-solicitation'
	list icmp_type 'router-advertisement'
	list icmp_type 'neighbour-advertisement'
	option limit '1000/sec'
	option family 'ipv6'
	option target 'ACCEPT'

config rule
	option name 'Allow-ICMPv6-Forward'
	option src 'wan'
	option proto 'icmp'
	list icmp_type 'echo-request'
	list icmp_type 'echo-reply'
	list icmp_type 'destination-unreachable'
	list icmp_type 'packet-too-big'
	list icmp_type 'time-exceeded'
	list icmp_type 'bad-header'
	list icmp_type 'unknown-header-type'
	option limit '1000/sec'
	option family 'ipv6'
	option target 'ACCEPT'
	option dest '*'

config rule
	option name 'Drop IOT devices that have been stuck on main LAN (eg 192.168.1.127 broadlink)'
	option src 'lan'
	list src_mac 'BC:D0:74:43:8D:03'
	list proto 'all'
	option target 'DROP'
	option dest 'wan'
	option enabled '0'

config rule
	option name 'Drop IOT devices that are not trusted for external usage (eg 192.168.4.126 panasonic-tv, onti switch 1)'
	option src 'IOTLAN'
	list src_mac '24:EC:99:7B:F5:59'
	list src_mac '8C:1F:64:9A:C8:EC'
	option proto 'all'
	option target 'DROP'
	option dest 'wan'

config rule
	option name 'Drop pixel watch that binds to wrong network (IOT)'
	option src 'IOTLAN'
	list src_mac '26:48:A7:DD:10:FA'
	list src_mac 'FE:C1:C1:C5:30:E7'
	list src_mac 'F2:18:24:D9:C9:33'
	list src_mac '1E:5D:0C:91:28:50'
	option proto 'all'
	option target 'DROP'

config rule
	option name 'Drop pixel watch that binds to wrong network (GUEST)'
	option src 'GUESTLAN'
	list src_mac '26:48:A7:DD:10:FA'
	list src_mac 'FE:C1:C1:C5:30:E7'
	list src_mac 'F2:18:24:D9:C9:33'
	list src_mac '1E:5D:0C:91:28:50'
	option proto 'all'
	option target 'DROP'

config rule
	option name 'Drop pixel watch that binds to wrong network (WINDOWS)'
	option src 'WINDOWSLAN'
	list src_mac '26:48:A7:DD:10:FA'
	list src_mac 'FE:C1:C1:C5:30:E7'
	list src_mac 'F2:18:24:D9:C9:33'
	list src_mac '1E:5D:0C:91:28:50'
	option proto 'all'
	option target 'DROP'

config rule
	option name 'Allow-IPSec-ESP'
	option src 'wan'
	option proto 'esp'
	option target 'ACCEPT'
	option dest 'lan'

config rule
	option name 'Allow-ISAKMP'
	option src 'wan'
	option proto 'udp'
	option target 'ACCEPT'
	option dest 'lan'
	option dest_port '500'

config include
	option path '/etc/firewall.user'

config redirect
	option name 'http.webserver.windows'
	option src 'WINDOWSLAN'
	option src_dport '80'
	option src_dip '122.199.47.107'
	list proto 'tcp'
	option target 'DNAT'
	option dest 'lan'
	option dest_ip '192.168.1.18'
	option dest_port '80'

config redirect
	option name 'https.webserver.windows'
	option src 'WINDOWSLAN'
	option src_dport '443'
	option src_dip '122.199.47.107'
	list proto 'tcp'
	option target 'DNAT'
	option dest 'lan'
	option dest_ip '192.168.1.18'
	option dest_port '443'

config redirect
	option name 'http.webserver.wan'
	option src 'wan'
	option src_dport '80'
	list proto 'tcp'
	option target 'DNAT'
	option dest 'lan'
	option dest_ip '192.168.1.18'
	option dest_port '80'

config redirect
	option name 'https.webserver.wan'
	option src 'wan'
	option src_dport '443'
	list proto 'tcp'
	option target 'DNAT'
	option dest 'lan'
	option dest_ip '192.168.1.18'
	option dest_port '443'

config redirect
	option name 'ssh.dirac'
	option src 'wan'
	option src_dport '2228'
	list proto 'tcp'
	option target 'DNAT'
	option dest 'lan'
	option dest_ip '192.168.1.17'
	option dest_port '22'

config redirect
	option name 'ssh.iot'
	option src 'wan'
	option src_dport '2229'
	list proto 'tcp'
	option target 'DNAT'
	option dest 'lan'
	option dest_ip '192.168.1.3'
	option dest_port '22'

config redirect
	option name 'ssh.gamow'
	option src 'wan'
	option src_dport '2230'
	list proto 'tcp'
	option target 'DNAT'
	option dest 'lan'
	option dest_ip '192.168.1.20'
	option dest_port '22'

config redirect
	option name 'ssh.fermi'
	option src 'wan'
	option src_dport '2236'
	list proto 'tcp'
	option target 'DNAT'
	option dest 'lan'
	option dest_ip '192.168.1.36'
	option dest_port '22'

config redirect
	option name 'ssh.fs'
	option src 'wan'
	option src_dport '2234'
	list proto 'tcp'
	option target 'DNAT'
	option dest 'lan'
	option dest_ip '192.168.1.2'
	option dest_port '22'

config redirect
	option name 'qbittorrent.dirac'
	option src 'wan'
	option src_dport '50251'
	list proto 'tcp'
	list proto 'udp'
	option target 'DNAT'
	option dest 'lan'
	option dest_ip '192.168.1.17'
	option dest_port '50251'

config redirect
	option name 'smtp.mail'
	option src 'wan'
	option src_dport '25'
	list proto 'tcp'
	option target 'DNAT'
	option dest 'lan'
	option dest_ip '192.168.1.4'
	option dest_port '25'
	option enabled '0'

{#

  The setup below allows me to cast from my phone and desktop, or a
  laptop attached to any of the LAN1, IOT4 and WINDOWS7 VLANs, via
  mkchromecast to the lounge TV.

  It is not minimal, and can be much reduced via
  https://forum.netgate.com/topic/142258/chromecast-audio-video-between-vlans

  Some ports do not appear necessary - I added 10001, because I saw it
  open on the chromecast, not because I needed it.  9000 is also
  listening, but I did not open it.  224.0.0.0/4 should be much locked
  down per above (5353 is not working because of the rules below, it
  is only working because we have already allowed 224.0.0.0/4 wide
  open, but I am wanting to experiment with cam-rear and cam-garage
  too (not that I need to, but it has been causing problems lately).

  udprelay may be needed too, per
  https://redmine.pfsense.org/issues/10818
  https://forum.netgate.com/topic/155698/how-can-i-get-this-udp-relay-package-for-casting-across-vlans
  ? (udp-broadcast-relay-redux in openwrt?)

  As one of those URLs states, google keep updating the firmware,
  which is essentially just an undocumented chrome browser in a
  blockbox, so individual networks might need ad-hoc changes to add a
  new side channel they've added.

#}

{#
# https://forum.openwrt.org/t/chromecast-across-two-subnets/10583/10
#}
{#
# We do not need LAN -> Windows rules, because LAN can talk to all networks
#
#config rule
#	option name 'lan-to-chromecast-5353'
#	option target 'ACCEPT'
#	option src 'lan'
#	option dest '*'
#	option dest_ip '192.168.7.5'
#	option dest_port '5353'
#	list proto 'tcp'
#	list proto 'udp'
#
#config rule
#	option name 'lan-to-chromecast-1900'
#	option target 'ACCEPT'
#	option src 'lan'
#	option dest '*'
#	option dest_ip '192.168.7.5'
#	option dest_port '1900'
#	list proto 'tcp'
#	list proto 'udp'
#
#config rule
#	option name 'lan-to-chromecast-8008-8009'
#	option target 'ACCEPT'
#	option src 'lan'
#	option dest '*'
#	option dest_ip '192.168.7.5'
#	option dest_port '8008-8009'
#	list proto 'tcp'
#
#config rule
#	option name 'lan-to-chromecast-9000'
#	option target 'ACCEPT'
#	option src 'lan'
#	option dest '*'
#	option dest_ip '192.168.7.5'
#	option dest_port '9000'
#	list proto 'tcp'
#
#config rule
#	option name 'lan-to-chromecast-10001'
#	option target 'ACCEPT'
#	option src 'lan'
#	option dest '*'
#	option dest_ip '192.168.7.5'
#	option dest_port '10001'
#	list proto 'tcp'
#
#config rule
#	option name 'lan-to-chromecast-5556-5558'
#	option target 'ACCEPT'
#	option src 'lan'
#	option dest '*'
#	option dest_ip '192.168.7.5'
#	option dest_port '5556-5558'
#	list proto 'tcp'
#	list proto 'udp'
#
#config rule
#	option name 'lan-to-chromecast-1338'
#	option target 'ACCEPT'
#	option src 'lan'
#	option dest '*'
#	option dest_ip '192.168.7.5'
#	option dest_port '1338'
#	list proto 'tcp'
#	list proto 'udp'
#
#config rule
#	option name 'lan-to-chromecast-multi'
#	option target 'ACCEPT'
#	option src 'lan'
#	option dest '*'
#	option dest_ip '224.0.0.0/4'
#	list proto 'tcp'
#	list proto 'udp'
#}
{#
# But we do need to allow windows to contact everyone on the net who
# it might need to contact via callbacks
#}
config rule
	option name 'chromecast-to-5353'
	option src 'WINDOWSLAN'
{#

  Not a very useful firewall for chromecast, but since the packets
  have to travel to the avahi reflector on gateway, and then be
  re-emitted by it, all source IPs will come from it, so we have to
  whitelist itself

#}
	list src_ip '192.168.7.5'
{#	list src_ip '192.168.7.203' # for testing #}
	list src_ip '192.168.7.254'
	list proto 'tcp'
	list proto 'udp'
	option target 'ACCEPT'
	option dest '*'
	option dest_port '5353'

config rule
	option name 'chromecast-to-1900'
	option src 'WINDOWSLAN'
	list src_ip '192.168.7.5'
{#	list src_ip '192.168.7.203' # for testing #}
	list src_ip '192.168.7.254'
	list proto 'tcp'
	list proto 'udp'
	option target 'ACCEPT'
	option dest '*'
	option dest_port '1900'

{#  Incoming rules not relevant for the same network of the chromecast
#config rule
#	option name 'windows-to-chromecast-8008-8009'
#	option target 'ACCEPT'
#	option src 'WINDOWSLAN'
#	option dest '*'
#	option dest_ip '192.168.7.5'
#	option dest_port '8008-8009'
#	list proto 'tcp'
#
#config rule
#	option name 'windows-to-chromecast-9000'
#	option target 'ACCEPT'
#	option src 'WINDOWSLAN'
#	option dest '*'
#	option dest_ip '192.168.7.5'
#	option dest_port '9000'
#	list proto 'tcp'
#
#config rule
#	option name 'windows-to-chromecast-10001'
#	option target 'ACCEPT'
#	option src 'WINDOWSLAN'
#	option dest '*'
#	option dest_ip '192.168.7.5'
#	option dest_port '10001'
#	list proto 'tcp'
#
#}
config rule
	option name 'chromecast-to-5556-5558'
	option src 'WINDOWSLAN'
	list src_ip '192.168.7.5'
{#	list src_ip '192.168.7.203' # for testing #}
	list src_ip '192.168.7.254'
	list proto 'tcp'
	list proto 'udp'
	option target 'ACCEPT'
	option dest '*'
	option dest_port '5556-5558'

config rule
	option name 'chromecast-to-1338'
	option src 'WINDOWSLAN'
	list src_ip '192.168.7.5'
{#	list src_ip '192.168.7.203' # for testing #}
	list src_ip '192.168.7.254'
	list proto 'tcp'
	list proto 'udp'
	option target 'ACCEPT'
	option dest '*'
	option dest_port '1338'

config rule
	option name 'windows-to-multi'
	option src 'WINDOWSLAN'
{#	list src_ip '192.168.7.5' #}
{#	list src_ip '192.168.7.203' # for testing #}
{#	list src_ip '192.168.7.254' #}
	list proto 'tcp'
	list proto 'udp'
	option target 'ACCEPT'
	option dest '*'
	option dest_ip '224.0.0.0/4'
{#
# Then whatever IOT->chromecast rules are needed
# (it will need whatever is needed to initiate the connection,
# but the callbacks on 5353 etc will not be needed)
#}
{#
#config rule
#	option name 'iot-to-chromecast-5353'
#	option target 'ACCEPT'
#	option src 'IOTLAN'
#	option dest '*'
#	option dest_ip '192.168.7.5'
#	option dest_port '5353'
#	list proto 'tcp'
#	list proto 'udp'
#
#config rule
#	option name 'iot-to-chromecast-1900'
#	option target 'ACCEPT'
#	option src 'IOTLAN'
#	option dest '*'
#	option dest_ip '192.168.7.5'
#	option dest_port '1900'
#	list proto 'tcp'
#	list proto 'udp'
#}

config rule
	option name 'iot-to-chromecast-8008-8009'
	option src 'IOTLAN'
	list proto 'tcp'
	option target 'ACCEPT'
	option dest '*'
	option dest_ip '192.168.7.5'
	option dest_port '8008-8009'

config rule
	option name 'iot-to-chromecast-9000'
	option src 'IOTLAN'
	list proto 'tcp'
	option target 'ACCEPT'
	option dest '*'
	option dest_ip '192.168.7.5'
	option dest_port '9000'

config rule
	option name 'iot-to-chromecast-10001'
	option src 'IOTLAN'
	list proto 'tcp'
	option target 'ACCEPT'
	option dest '*'
	option dest_ip '192.168.7.5'
	option dest_port '10001'

{#
#config rule
#	option name 'iot-to-chromecast-5556-5558'
#	option target 'ACCEPT'
#	option src 'IOTLAN'
#	option dest '*'
#	option dest_ip '192.168.7.5'
#	option dest_port '5556-5558'
#	list proto 'tcp'
#	list proto 'udp'
#
#config rule
#	option name 'iot-to-chromecast-1338'
#	option target 'ACCEPT'
#	option src 'IOTLAN'
#	option dest '*'
#	option dest_ip '192.168.7.5'
#	option dest_port '1338'
#	list proto 'tcp'
#	list proto 'udp'
#
#}
config rule
	option name 'iot-to-multi'
	option src 'IOTLAN'
	list proto 'tcp'
	list proto 'udp'
	option target 'ACCEPT'
	option dest '*'
	option dest_ip '224.0.0.0/4'

{#
# Finally, these sort of guys?
# But wait, there's more! Because Chromecast blasts with a TTL of 1, it’ll die when it crosses a subnet. To get around this, I had a custom IPTABLES rule to keep that TTL up:
# iptables -A PREROUTING -t mangle -p udp —dport 1900 -j TTL-inc 1
# I also have a handful of other iptables rules that replicate those above:
# iptables -A INPUT -t filter -i br-lan -p udp —sport 5353 -J ACCEPT
#}
{#
# There's also advice like this:
# https://community.home-assistant.io/t/chromecast-media-devices-showing-unavailable-in-home-assistant/321814/2
# https://blog.g3rt.nl/allow-google-chromecast-host-firewall-iptables.html#comment_thread
export CHROMECAST_IP=10.1.2.3 # Adjust to the Chromecast IP in your local network
iptables -A INPUT -s ${CHROMECAST_IP}/32 -p udp -m multiport --sports 32768:61000 -m multiport --dports 32768:61000 -m comment --comment "Allow Chromecast UDP data (inbound)" -j ACCEPT
iptables -A OUTPUT -d ${CHROMECAST_IP}/32 -p udp -m multiport --sports 32768:61000 -m multiport --dports 32768:61000 -m comment --comment "Allow Chromecast UDP data (outbound)" -j ACCEPT
iptables -A OUTPUT -d ${CHROMECAST_IP}/32 -p tcp -m multiport --dports 8008:8009 -m comment --comment "Allow Chromecast TCP data (outbound)" -j ACCEPT
iptables -A OUTPUT -d 239.255.255.250/32 -p udp --dport 1900 -m comment --comment "Allow Chromecast SSDP" -j ACCEPT

#

Allow high UDP ports both incoming and outgoing.
"High ports" are the local ports usually ranging 32768-61000 on most Linux systems.

Allow both TCP ports 8008 and 8009 outbound to the Chromecast device.
I've noticed most reference only use 8008, but that did not do it for me and saw outbound connection to port 8009 being blocked.

Allow the special SSDP packets outbound (which is UDP traffic to the multicast IP 239.255.255.250, destination port 1900).
As far as I understand, a Chromecast app should send information over SSDP if it wants to discover the Chromecasts in the network. The Chromecast should then reply to the source IP it was given.

#}
config rule
	option name 'internal.windows-to-http'
	option src 'WINDOWSLAN'
	list proto 'tcp'
	option target 'ACCEPT'
	option dest '*'
	list dest_ip '192.168.1.6'
	list dest_ip '192.168.1.7'
	list dest_ip '192.168.1.8'
	list dest_ip '192.168.1.11'
	list dest_ip '192.168.1.12'
	list dest_ip '192.168.1.18'
	list dest_ip '192.168.1.61'
	list dest_ip '192.168.1.90'
	list dest_ip '192.168.4.1'
	list dest_ip '192.168.1.254'
	list dest_ip '192.168.1.252'
	list dest_ip '192.168.1.251'
	list dest_ip '192.168.1.250'
	list dest_ip '192.168.1.244'
	list dest_ip '192.168.1.243'
	option dest_port '80'

config rule
	option name 'internal.windows-to-https'
	option src 'WINDOWSLAN'
	list proto 'tcp'
	option target 'ACCEPT'
	option dest '*'
	list dest_ip '192.168.1.6'
	list dest_ip '192.168.1.7'
	list dest_ip '192.168.1.8'
	list dest_ip '192.168.1.11'
	list dest_ip '192.168.1.12'
	list dest_ip '192.168.1.18'
	list dest_ip '192.168.1.61'
	list dest_ip '192.168.1.90'
	list dest_ip '192.168.4.1'
	list dest_ip '192.168.1.254'
	list dest_ip '192.168.1.252'
	list dest_ip '192.168.1.251'
	list dest_ip '192.168.1.250'
	list dest_ip '192.168.1.244'
	list dest_ip '192.168.1.243'
	option dest_port '443'

config rule
	option name 'internal.iot-to-http'
	option src 'IOTLAN'
	list proto 'tcp'
	option target 'ACCEPT'
	option dest '*'
	list dest_ip '192.168.1.18'
	option dest_port '80'

config rule
	option name 'internal.iot-to-https'
	option src 'IOTLAN'
	list proto 'tcp'
	option target 'ACCEPT'
	option dest '*'
	list dest_ip '192.168.1.18'
	option dest_port '443'

config rule
	option name 'samba.137'
	option src 'WINDOWSLAN'
	list proto 'udp'
	option target 'ACCEPT'
	option dest 'lan'
	list dest_ip '192.168.1.2'
	option dest_port '137'

config rule
	option name 'samba.138'
	option src 'WINDOWSLAN'
	list proto 'udp'
	option target 'ACCEPT'
	option dest 'lan'
	list dest_ip '192.168.1.2'
	option dest_port '138'

config rule
	option name 'samba.139'
	option src 'WINDOWSLAN'
	list proto 'tcp'
	option target 'ACCEPT'
	option dest 'lan'
	list dest_ip '192.168.1.2'
	option dest_port '139'

config rule
	option name 'samba.445'
	option src 'WINDOWSLAN'
	list proto 'tcp'
	option target 'ACCEPT'
	option dest 'lan'
	list dest_ip '192.168.1.2'
	option dest_port '445'

config rule
	option name 'tmpblock'
	option src '*'
	list src_mac '14:CC:20:84:88:99'
	option target 'DROP'
	option dest '*'
	option enabled '0'

config redirect
	option name 'hassio-wireguard'
	option src 'wan'
	option src_dport '51820'
	list proto 'udp'
	option target 'DNAT'
	option dest 'lan'
	option dest_ip '192.168.1.90'

config rule
	option name 'block 53.GUEST'
	option src 'GUESTLAN'
	option target 'REJECT'
	option dest '*'
	option dest_port '53'

config rule
	option name 'block 53.IOT'
	option src 'IOTLAN'
	option target 'REJECT'
	option dest '*'
	option dest_port '53'

config rule
	option name 'block 53.WINDOWS'
	option src 'WINDOWSLAN'
	option target 'REJECT'
	option dest '*'
	option dest_port '53'

config rule
	option name 'block 53.LAN'
	option src 'lan'
	option target 'REJECT'
	option dest '*'
	option dest_port '53'
	option enabled '0'

config redirect
	option name 'fs-wireguard'
	option src 'wan'
	option src_dport '51821'
	list proto 'udp'
	option target 'DNAT'
	option dest 'lan'
	option dest_ip '192.168.1.2'

config zone
	option name 'MGMT'
	list network 'MGMT'
	option input 'REJECT'
	option output 'ACCEPT'
	option forward 'REJECT'

config forwarding
	option src 'lan'
	option dest 'MGMT'

config forwarding
	option src 'MGMT'
	option dest 'wan'

config redirect
	option name 'copy ecowitt to homeassistant'
	option src 'lan'
	option src_ip '192.168.1.99'
	option src_dport '8000'
	option target 'DNAT'
	option dest 'lan'
	option dest_ip '192.168.1.90'
	option dest_port '4199'
	option enabled '0'

config rule
	option name 'Barrier KVM'
	option src 'IOTLAN'
	list src_ip '192.168.4.39'
	option target 'ACCEPT'
	option dest 'lan'
	list dest_ip '192.168.1.17'
	option dest_port '24800'

config rule
	option name 'SMTP'
	option src 'WINDOWSLAN'
	list proto 'tcp'
	option target 'ACCEPT'
	option dest 'lan'
	list dest_ip '192.168.1.15'
	option dest_port '25'

config rule
	option name 'SMTPS'
	option src 'WINDOWSLAN'
	list proto 'tcp'
	option target 'ACCEPT'
	option dest 'lan'
	list dest_ip '192.168.1.15'
	option dest_port '465'

config rule
	option name 'syslog'
	option src 'WINDOWSLAN'
	list proto 'tcp'
	option target 'ACCEPT'
	option dest 'lan'
	list dest_ip '192.168.1.204'
	option dest_port '514'
