---
# If you want these handlers to run as root, the playbook has to be
# running as root, or you have to include the role as root

- name: "Update initramfs config"
  shell: "/usr/sbin/update-initramfs -u -k all"

- name: "Regenerate boot config"
  include_tasks: "{{ playbook_dir }}/roles/common_handlers/handlers/regenerate_boot_config.yml"

- name: restart cron
  service:
    name: cron
    state: restarted

  # with munin-async, first you need to restart munin-node, then
  # munin-async.  If there's only one munin-async that is running on
  # iot itself caching on behalf of everyone, we'll have to delegate
  # to it
- name: restart munin-node
  service:
    name: munin-node
    state: restarted
  when: "'munin-node' in ansible_facts.packages | default([])"
  notify: restart munin-async

- name: restart munin-async
  service:
    name: munin-async
    state: restarted
  when: "'munin-async' in ansible_facts.packages | default([])"

- name: restart nut server
  service:
    name: nut-server
    state: restarted

- name: restart nut monitor
  service:
    name: nut-monitor
    state: restarted

- name: restart autofs
  service:
    name: autofs
    state: restarted

- name: restart autofs
  service:
    name: autofs
    state: restarted

- name: "systemd daemon reload"
  systemd:
    daemon_reload: true

- name: restart systemd-logind
  service:
    name: systemd-logind
    state: restarted

- name: restart ssh
  service:
    name: ssh
    state: restarted
  become: true

- name: restart apache2
  service:
    name: apache2
    state: restarted
  become: true
  when: "'apache2' in ansible_facts.packages | default([])"

- name: restart chrony
  service:
    name: chrony
    state: restarted
  become: true
  when: "'chrony' in ansible_facts.packages | default([])"
