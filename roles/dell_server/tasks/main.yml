---
- name: copy fan-speed-control
  copy:
    src: /home/tconnors/code/R710-Fan-Control/fan-speed-control.pl
    dest: /usr/local/bin/fan-speed-control.pl
    owner: root
    group: root
    mode: 0755
  become: true
  notify: enable and restart fan-speed-control

- name: install fan-speed-control systemd target
  copy:
    src: /home/tconnors/code/R710-Fan-Control/fan-speed-control.service
    dest: /etc/systemd/system/fan-speed-control.service
    owner: root
    group: root
    mode: 0644
  become: true
  notify: enable and restart fan-speed-control

- name: enable fan-speed-control systemd target
  # systemd rather than service because we're explicitly installing our own systemd units
  systemd:
    name: fan-speed-control
    enabled: yes
    state: started
  become: true

- name: make apt keyrings directory
  file:
    path="/etc/apt/keyrings"
    state=directory
  become: true

# https://forum.proxmox.com/threads/dell-openmanage-on-proxmox-6-x.57932/post-522534
# https://docs.ansible.com/ansible/latest/collections/ansible/builtin/apt_repository_module.html
- name: Add dell openmanage repo
  block:
    - name: dell repo |no apt key
      ansible.builtin.get_url:
        url: https://linux.dell.com/repo/pgp_pubkeys/0x1285491434D8786F.asc
        dest: /etc/apt/keyrings/linux.dell.com.0x1285491434D8786F.asc

    - name: somerepo | apt source
      copy: # should be apt_repository, but https://github.com/ansible/ansible/issues/58386 https://github.com/ansible/ansible/issues/61420 closed WONTFIX
        content: "deb [arch=amd64 signed-by=/etc/apt/keyrings/linux.dell.com.0x1285491434D8786F.asc] https://linux.dell.com/repo/community/openmanage/{{ dell_omsa_version }} main\n"
        dest: "/etc/apt/sources.list.d/linux.dell.com.sources.list"
  become: true

#- name: Check if sfcb libcimcclient0 and libssl1.0.2 is installed
#  shell: "dpkg-query -W --showformat='${Status}\n' sfcb libcimcclient0 libssl1.0.2 libwsman-server1_2.6.5-0ubuntu3_amd64.deb 2>&1 | grep -v '^install ok installed$' | grep -q ."
#  register: archived_package_check_deb
#  failed_when: archived_package_check_deb.rc > 1
#  changed_when: archived_package_check_deb.rc == 0

- name: Ensures ~ansible/Downloads dir exists
  file:
    path="/home/{{ ansible_env.USER }}/Downloads"
    state=directory

- name: remove prohibited packages
  apt:
    name: ['libwsman-client2']
    state: absent
  become: true

- name: Download archived .deb files
  copy:
    src: "/var/cache/apt/non-delete/{{ item }}"
    dest: "/home/{{ ansible_env.USER }}/Downloads/{{ item }}"
#  when: archived_package_check_deb.rc == 0
  loop: "{{ srvadmin_depends }}"

- name: Install archived_package
  apt: deb="/home/{{ ansible_env.USER }}/Downloads/{{ item }}"
  become: true
#  when: archived_package_check_deb.rc == 0
  loop: "{{ srvadmin_depends }}"

- name: Download megacli .deb files
  copy:
    src: "/home/tconnors/sysadmin/install/megaraid_cli/Linux/megacli_8.07.14-2_all.deb"
    dest: "/home/{{ ansible_env.USER }}/Downloads/megacli_8.07.14-2_all.deb"

- name: Install megacli .deb files
  apt: deb="/home/{{ ansible_env.USER }}/Downloads/{{ item }}"
  become: true
#  when: archived_package_check_deb.rc == 0
  with_items:
    - "megacli_8.07.14-2_all.deb"

- name: Install dell tools
  apt:
    name: ['srvadmin-all', 'ipmitool', 'ledmon']
    update_cache: yes
    cache_valid_time: 0
    autoremove: no
    state: present
  become: true
