---
- name: Set hostname
  hostname:
    name: "{{ hostname | default(inventory_hostname) }}"
  notify: restart hostname
  become: true
  ignore_errors: true  # fails when not in systemd, or still in the
                       # installation environment, etc

- name: "Search for correct hosts line"
  become: yes
  register: hosts_line
  check_mode: yes # cause this to become just a test.  If there's already
                  # user_namespace settings, then this will think line is
                  # being replaced, and changed will become true (but we
                  # force it to false to not output a line saying
                  # "changed"), and msg will become "line added", else
                  # changed stays false, and msg does not contain "line
                  # added"
  lineinfile:
    dest: /etc/hosts
    line: hosts already has correct hostname
    regexp: "^{{ ansible_default_ipv4.address }} {{ fqdn | default( inventory_hostname ~ '.' ~ domain) }} {{ hostname | default(inventory_hostname) }}$"
    state: present
  changed_when: false

- name: "Remove existing incorrect host entries"
  when: hosts_line.msg == "line added"
  lineinfile:
    dest: /etc/hosts
    regexp: "\\s{{ hostname | default(inventory_hostname) }}$"
    state: absent
  become: true

- name: Add correct IP address to hosts file
  when: hosts_line.msg == "line added"
  lineinfile:
    dest: /etc/hosts
    insertafter: '^127\.0\.0\.1\slocalhost'
    line: "{{ ansible_default_ipv4.address }} {{ fqdn | default( inventory_hostname ~ '.' ~ domain) }} {{ hostname | default(inventory_hostname) }}"
    state: present
  notify: restart hostname
  become: true

- name: Remove default line from hosts file
  lineinfile:
    dest: /etc/hosts
    regexp: '^127\.0\.1\.1'
    state: absent
  notify: restart hostname
  become: true

- name: Make sure all handlers run
  meta: flush_handlers
