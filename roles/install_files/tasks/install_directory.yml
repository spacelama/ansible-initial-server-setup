---
# copies a directory to .name, from .source, defaulting to homes/<name> if
# .source isn't provided

- include_tasks: "{{ playbook_dir }}/roles/common/tasks/calculate_directory_contents.yml"

# FIXME: easy enough to generalise this to handle .j2 files as well
#     dest: {{item | dirname}}/{{ item | basename | regex_replace('\\.j2$', '') }}

# FIXME: might need to implement "Does {{ ( '~' ~ user ~ '/' ~
# dir_file_or_template.name ) | dirname }} exist?" style tests that
# were in install_dir_file_or_template.yml, to ensure if directory
# already exists but is a symlink, it is not recreated (which fails)
# as a directory.  Not implementing for now because don't want the
# extra tests on every loop, and it appears that we currently don't
# have any links suffering from this.  Also should not affect new
# builds.

- name: "Install directory: {{ dir_file_or_template.name }} from {{ source }}"
  file:
    path: "{{ dir_file_or_template.name }}{{ file_recurse.path }}"
    state: directory
    owner: "{{ dir_file_or_template.user | default('root') }}"
    group: "{{ dir_file_or_template.group | default('root') }}"
    # AND existing mode in source tree with 0777 to make sure no
    # setuid or setgid bits are set in the filesystem
    mode: "{{ dir_file_or_template.mode | default(file_recurse.mode | bitwise_and_oct('0777')) }}"
  loop_control:
    loop_var: file_recurse
    label: "{{ dir_file_or_template.name }}{{ file_recurse.path }}"
  with_items: "{{ file_list.directory }}"
  become: "{{ dir_file_or_template.become | default(true) }}"
  notify: "{{ dir_file_or_template.notify | default(omit) }}"

- name: "install file under directory: {{ dir_file_or_template.name }} from {{ source }}"
  copy:
    dest: "{{ dir_file_or_template.name }}{{ file_recurse.path }}"
    owner: "{{ dir_file_or_template.user | default('root') }}"
    group: "{{ dir_file_or_template.group | default('root') }}"
    src: "{{ file_recurse.src }}"
    local_follow: "{{ dir_file_or_template.local_follow | default(omit) }}"
    # AND existing mode in source tree with 0777 to make sure no
    # setuid or setgid bits are set in the filesystem
    mode: "{{ dir_file_or_template.mode | default(file_recurse.mode | bitwise_and_oct('0777')) }}"
    follow: true # allow an admin to symlink their files directly into
                 # this git repo if they happen to be treating their
                 # editing desktop environment as ansible master, and
                 # always have the latest copy of their config.
  loop_control:
    loop_var: file_recurse
    label: "{{ dir_file_or_template.name }}{{ file_recurse.path }}"
  with_items: "{{ file_list.file }}"
  become: "{{ dir_file_or_template.become | default(true) }}"
  notify: "{{ dir_file_or_template.notify | default(omit) }}"

- name: "install file symlink under directory: {{ dir_file_or_template.name }} from {{ source }}"
  file:
    dest: "{{ dir_file_or_template.name }}{{ file_recurse.path }}"
    owner: "{{ dir_file_or_template.user | default('root') }}"
    group: "{{ dir_file_or_template.group | default('root') }}"
    src: "{{ file_recurse.src }}"
    state: link
    force: true
  loop_control:
    loop_var: file_recurse
    label: "{{ dir_file_or_template.name }}{{ file_recurse.path }}"
  with_items: "{{ file_list.link }}"
  become: "{{ dir_file_or_template.become | default(true) }}"
  notify: "{{ dir_file_or_template.notify | default(omit) }}"
