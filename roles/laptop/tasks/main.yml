---
- name: determine if systemd login needs tweaking
  stat: path=/etc/systemd/logind.conf
  register: systemd_logind

- name: determine if elogind needs tweaking
  stat: path=/etc/elogind/logind.conf
  register: elogind

- name: Get rid of systemd lid behaviour
  lineinfile:
    dest: /etc/systemd/logind.conf
    line: HandleLidSwitch=ignore
    regexp: ^HandleLidSwitch=
    state: present
  become: true
  when: systemd_logind.stat.exists
  notify: restart systemd-logind

- name: Get rid of Upower lid behaviour
  lineinfile:
    dest: /etc/UPower/UPower.conf
    line: IgnoreLid=true
    regexp: ^IgnoreLid=
    state: present
  become: true

- name: Get rid of elogind lid behaviour
  lineinfile:
    dest: /etc/elogind/logind.conf
    line: HandleLidSwitch=ignore
    regexp: ^HandleLidSwitch=
    state: present
  become: true
  when: elogind.stat.exists

#- name: Get rid of acpi-support lid behaviour
#  lineinfile:
#    dest: /etc/acpi/lid.sh

- name: Install battery, wifi tools
  apt:
    name: ['ibam', 'wmbattery', 'powerstat', 'battery-stats', 'network-manager', 'iwd', 'rfkill', 'wireless-tools', 'haveged', 'brightnessctl', 'brightness-udev', 'light', 'autorandr'] # some machines, in particular fermi, were not answering to ssh until well after bootup, if not interacted with manually.  That turned out to be crng: haveged: https://unix.stackexchange.com/questions/461879/services-wont-start-after-booting-until-after-logging-in-through-the-virtual-co, perhaps could use rng-tools5: https://unix.stackexchange.com/questions/442698/when-i-log-in-it-hangs-until-crng-init-done/442744#442744
    autoremove: no
    state: present
  become: true

# - name: install laptop packages that were failing at one point
#   apt:
#     name: ['ddcci-dkms']
#     autoremove: no
#     state: present
#   ignore_errors: true
#   become: true

- name: configure battery-stats
  lineinfile:
    dest: /etc/battery-stats.conf
    backrefs: yes
    regexp: '^(ARGS=.*interval=60 .*)'
    line: '#\1\nARGS="--interval=300 --flush=10 --ignore-missing-battery"'
    state: present
  become: true
  notify: restart battery-stats

#https://wiki.debian.org/WiFi/HowToUse#NetworkManager_Frontends
#https://wiki.debian.org/NetworkManager/iwd (note that it might still have troubles auto-reconnecting upon AP requesting we roam)

- name: ensure network-manager can use iwd
  ini_file:
    path: /etc/iwd/main.conf
    section: "{{ item.section }}"
    option: "{{ item.key }}"
    value: "{{ item.value }}"
    state: present
  become: true
  with_items:
    - { section: "General", key: "EnableNetworkConfiguration", value: "false" }
    - { section: "Network", key: "EnableIPv6", value: "false" }

# if were to use iwd without network-manager, would want to inject /var/lib/*psk

- name: Ensure NetworkManager.conf has no randomisation, and set backend
  ini_file:
    path: /etc/NetworkManager/NetworkManager.conf
    section: "{{ item.section }}"
    option: "{{ item.key }}"
    value: "{{ item.value }}"
    state: present
  become: true
  with_items:
    - { section: "device", key: "wifi.scan-rand-mac-address", value: "no" }
#    - { section: "device", key: "wifi.backend", value: "iwd" }
    - { section: "device", key: "wifi.backend", value: "wpa_supplicant" }

- name: disable wpa_supplicant
  service:
    name: wpa_supplicant
    enabled: no
  become: true

- name: disable iwd from autostarting
  service:
    name: iwd
    enabled: no
  become: true

- name: Remove pdnsd
  apt:
    name: ['pdnsd']
    state: absent
  become: true

- name: install network-keep-alive.sh
  copy:
    dest: /usr/local/bin/network-keep-alive.sh
    src: network-keep-alive.sh
    mode: 0755
  become: true
  notify: restart network-keep-alive

- name: install network-keep-alive.service
  copy:
    dest: /etc/systemd/system/network-keep-alive.service
    src: network-keep-alive.service
  become: true
  notify: restart network-keep-alive

  # handler picks up when file is introduced or changed, and here we
  # otherwise ensure it's at least started
- name: start network-keep-alive
  systemd:
    name: "network-keep-alive"
    state: started
  become: true

- name: Make sure all handlers run
  meta: flush_handlers
