---
  my_public_key: ~/.ssh/id_rsa.pub
  new_public_key: ~/.ssh/id_rsa_github.pub
  fs_public_key: ~/.ssh/fs_id_rsa.pub
  deprecated_public_key: ~/.ssh/remove_id_rsa.pub
  domain: rather.puzzling.org
#  ssh_port: 22
  ansible_was_run_by: "{{ lookup('env','USER') }@{{ lookup('env','HOSTNAME') }}"
  munin_async_ssh_key: "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC2gmBTbXpS3mgxzkOM5rpVWRxokfuCYdfF4oU41tyQFeP/lpf10KeUAj/7OT3FD3c0FQp0dKdfKS9sKZZMCAmLR4PHpNgJyF0zAaSUFXNgv3APvnfUaf4RX7hj8qh+KYv4wimmE9ayYMsIxA1ltlMkOa2IGOj4D5DiGAusg9MwtIzHJlJACCVwR7AFAr3ZWeYbP+Fdst5csYrA5Sv/QqFpIo56vBhiDqlpbMu7R+5NEVNxb0aOs5bQSe+AwrPBWWbd91Pt/JaYD23DUjyMPLR7IPdtlnjrYrRU6X9f7uJbCjZjtfYo2XDbZIHSJuUYxVFNTFe1392IfKu/Zq4Y+uuqm+mtzfTLSfURF1QXIfmddcgv91dOmSE4oPrCDeM6gRx+33+9Sg07JOXFtHR2Onsyl4Ml/BrVm9bWlSiNNriEBt+dAHBzBfdAJQipGuU2EuMCyxagLxHSSuPCf7f8BEgyEYbX4KBomg5L6klXS5/bN4/Y53DdadaH5uDSvMFDwaU= munin@iot"
  smtp_server: smtp.rather.puzzling.org
  smtp_root_alias: tconnors
  smtp_aliases: |2
    backuppc: root
    adsl: root
    nut: root

    root: tconnors
  smtp_mail_name: rather.puzzling.org
  dovecot_insecure_logfile_creation: true
  smtp_crontab:
    user: tconnors
    content: |2
      PATH=/home/tconnors/bin:/usr/bin:/bin:/usr/sbin:/sbin

      # m h  dom mon dow   command
      @reboot restartfetchmail
      12 */6 * * * restartfetchmail

      0 * * * * check-oldstopped-mail
      00 07 * * sun cd Mail && mv .log.normal .log.normal.old
      # now automated by the read-mail: 00 06 * * * mv_deleted_inbox_trash

  ceph_client_mounts:
    - { mount: "/home/tconnors/photos",      name: "fs",        mds_namespace: "cephfs-hdd",  options: "nodev,nosuid,rw,strictatime,async", mons: "192.168.1.6,192.168.1.7,192.168.1.8", remote_path: "/mounts/fs/home.tconnors.photos" }
    - { mount: "/home/tconnors/thesis",      name: "fs",        mds_namespace: "cephfs-hdd",  options: "nodev,nosuid,rw,strictatime,async", mons: "192.168.1.6,192.168.1.7,192.168.1.8", remote_path: "/mounts/fs/home.tconnors.thesis" }
    - { mount: "/home/tconnors/public_html", name: "webserver", mds_namespace: "cephfs-slow", options: "nodev,nosuid,rw,strictatime,async", mons: "192.168.1.6,192.168.1.7,192.168.1.8", remote_path: "/mounts/webserver/home.tconnors/public_html" }
    - { mount: "/home/tconnors/movies",      name: "media",     mds_namespace: "cephfs-hdd",  options: "nodev,nosuid,rw,strictatime,async", mons: "192.168.1.6,192.168.1.7,192.168.1.8", remote_path: "/mounts/media/movies" }

  pve_users:
    - "{{ lookup('file', 'main.pve_users.passwd') }}"

  nut_password: "{{ lookup('file', 'main.nut.passwd') }}"
  nut_ups_conf:
    pve1:
      content: |2
        [powershield-centurion]
        #https://blog.warbel.net/index.php/2017/09/15/configuring-powershield-ups-on-linux-and-integrating-into-zabbix/
        # https://alioth-lists.debian.net/pipermail/nut-upsuser/2011-March/006699.html
        #driver=nutdrv_qx
        # 20231125: nutdrv_qx is newer and slightly nicer than blazer_usb, and does things like bypass.start/stop, but it seems to get runtime calculation wrong, alternating between 0 and 60
        driver=blazer_usb
        port = auto
        # find with -DD:
        #ProductID: 5161
        #VendorID: 0665
        vendorid = 0665
        desc = "Powershield Centurion 1000@pve1"

        #        default.battery.voltage.high = 27.2
        default.battery.voltage.high = 39
        default.battery.voltage.low = 31.2
        # Just an example from
        # https://networkupstools.org/docs/man/blazer_usb.html,
        # modified according to manual and
        # https://powershield.com.au/wp-content/uploads/Tools/PowerShield_Comparison_RunChart_Web.pdf
        # (latter says 1000VA = 40minutes, 500VA = 88minutes,
        # pscebb6_u.pdf says 45 minutes, 105 minutes)
        # PowerShield_Centurion_Tower_Brochure.pdf says 52min, 104min
        runtimecal = 2700,100,6300,50
        # from manual:
        chargetime = 18000
    pve3:
      content: |2
        [powershield]
        #driver = blazer_usb
        driver=nutdrv_qx
        port = auto
        vendorid = 0665
        desc = "Powershield Mini@pve3"
        default.battery.voltage.high = 13
        default.battery.voltage.low = 10.4
        runtimecal = 312,100,624,50
        chargetime = 10800
    pve-backup:
      content: |2
        [powershield-commander]
        driver=nutdrv_qx
        #        driver=blazer_usb
        port=auto
        # find with -DD:
        #VendorID: 0001
        #ProductID: 0000
        vendorid = 0001
        desc = "Powershield Commander 1000@pve-backup"

        #        default.battery.voltage.high = 27.2
        default.battery.voltage.high = 26
        default.battery.voltage.low = 20.8
        # Just an example from https://networkupstools.org/docs/man/blazer_usb.html, modified according to manual
        runtimecal = 270,100,840,50
        # from manual:
        chargetime = 10800
  nut_upsmon_conf:
    pve1:
      name: powershield-centurion
      desc: "Powershield Centurion 1000@pve1"
    pve3:
      name: powershield
      desc: "Powershield Mini@pve3"
    pve-backup:
      name: powershield-commander
      desc: "Powershield Commander 1000@pve-backup"
    iot:
      # if iot is going to coordinate shutdown, it ought monitor pve1
      # because that's probably where it's running
      name: powershield-centurion
      desc: "Powershield Centurion 1000@pve1"
      host: pve1
  nut_upssched_install:
    location: /home/tconnors/bin/
    owner: tconnors
    group: tconnors
  munin_nut_config: |2
    #[nutups2_*]
    #env.upsc upsc

    [nutups2_powershield-commander.pve-backup*]
    user nut
    group nut
    # powershield commander 1000: 400 watts at 63% load on powershield commander 1000: 400/63
    env.power_emulated_multiplier 6.349
    # warning and critical from the values shown by nutups2_powershield-commander_voltage config, but upper limits scaled up a bit above the charging voltage, which is higher than full (uncharging) level
    # env.battery.warning
    env.battery_critical 20.8:27.5

    [nutups2_powershield-centurion.pve1*]
    user nut
    group nut
    # powershield centurion 1000: 445 watts at 48% load on powershield centurion 1000: 445/49
    env.power_emulated_multiplier 9.294
    # warning and critical from the values shown by nutups2_powershield-centurion_voltage config, but upper limits scaled up a bit above the charging voltage, which is higher than full (uncharging) level
    # env.battery.warning
    env.battery_critical 31.2:41.25

    [nutups2_powershield.pve3*]
    user nut
    group nut
    # powershield mini 1000: 317 watts at 67% load on powershield mini 1000: 317/67
    env.power_emulated_multiplier 4.73
    # warning and critical from the values shown by nutups2_powershield.asusrtax53u_voltage config, but upper limits scaled up a bit above the charging voltage, which is higher than full (uncharging) level
    # env.battery.warning
    env.battery_critical 10.40:13.75

  my_groups:
    tconnors:
      gid: 273
    backuppc:
      gid: 130
  my_users:
    tconnors:
      name: "Tim Connors"
      group: 'tconnors'
      groups: 'tconnors,plugdev'
      uid: 738
      state: 'present'
      password: "{{ lookup('file', 'main.tconnors.passwd') }}"
      sshkeys:
        - "{{ lookup('file', my_public_key) }}"
        - "{{ lookup('file', new_public_key) }}"
        - "{{ lookup('file', fs_public_key) }}"
      remove_sshkeys:
        - "{{ lookup('file', deprecated_public_key) }}"
      shell: "/bin/bash"
#      comment: "{{ ansible_was_run_by }}"
    backuppc:
      name: "BackupPC"
      group: 'backuppc'
      groups: 'backuppc' # FIXME: needs fuse on fs - does this wipe it out if applied there?
      dir: '/var/lib/backuppc'
      uid: 130
      state: 'present'
      password: '*'
      sshkeys:
        - "ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAuzH2v7HY/MOAXOFsYDn3Lj5JG0RVfVYKBoJHj1BlfaH+b7lMIjY6r+6iM2eaH3eE2xUfwU1JVn8khIY1TAZfKRqmF6qST8TXkNbcvABth2hCXP0UmcIDpwXoS3P7yK14w8VmkiIG9EYOS/DGiB02SHtp2feQ6fUh01s0mZgpW+1VNzH2RV8CG79t2oDjMCjzABm2+Wkg1rLDHFONpm4VlJF59OdWugQ3GgzJVSi6O048DNfDkVWhEFah4xoG1Im1lh8pQoRFXIIf5Vk7cS4S15VsoISXiiWhaxK+TKj/aZuBX1tYsNfoEin+meutUarRxt7dxWyduNB1IjJ0SYlGWQ== backuppc@fs"
#      comment: "backuppc@fs"
      shell: "/bin/sh"
#     ansible_adm is already installed via bootstrap, but we might want to later modify it:
  # could also have multiple keys with exclusive: https://stackoverflow.com/questions/38879266/is-it-possible-to-use-ansible-authorized-key-exclusive-with-multiple-keys
    ansible_adm:
      name: "ansible_adm"
      group: 'ansible_adm'
      groups: 'ansible_adm'
      uid: 9999
      state: 'present'
      password: '*'
      sshkeys:
        - "{{ lookup('file', my_public_key) }}"
        - "{{ lookup('file', new_public_key) }}"
      shell: "/bin/bash"
      remove_sshkeys:
        - "{{ lookup('file', deprecated_public_key) }}"

  fixup_user_conf_files:
    users:
      - tconnors
      - root
    files:
      - name: .vimrc
      - name: .bashrc.d/override-turnkey-prompt.sh
        mode: "0755"
      - name: .gitconfig
      - name: .gitattributes
      - name: .Xdefaults
      - name: .Xdefaults.debian
      - name: .emacs
      - name: .gnu-emacs
      - name: .gnu-emacs-custom
      - name: .xemacs/
    # templates done by matching on .j2
      - name: .nanorc
        source: homes/.nanorc.j2
  bashrc_files:
    - "{{ lookup('fileglob', 'etc_bashrc.d/*.sh', wantlist=True) }}"
  bin_files:
    - "{{ lookup('fileglob', 'bin/*', wantlist=True) }}"
    - "{{ lookup('fileglob', \"bin.Linux-{{ arch | default ('x86_64') }}/*\", wantlist=True) }}"

  install_dirs: # these directories would normally be created by the
                # packages we later install, but we want to be able to
                # install these files before the package is.  Only
                # really need to create the directories that hold
                # files built by templates below, because templates
                # need a full destination path specified, whereas
                # "copy" files can just have the path specified, which
                # implies the creation of that directory first
    - { dir: "/etc/chrony/sources.d", mode: "0755" }

    # "simple-sync" - let's just transfer a whole bunch of files,
    # according to simple criteria, with possible event triggering:
  install_files:
    - { source: sbin/init.sysvinit,                     dest: /sbin/init.sysvinit,                     mode: "0755" } # https://wiki.debian.org/systemd recovery from a borked systemd: grub "init=/sbin/init.sysvinit"
    - { source: usr_local_bin/hddtemp,                  dest: /usr/local/bin/hddtemp,                  mode: "0755" }
    - { source: usr_local_bin/smart-intercept-spindown, dest: /usr/local/bin/smart-intercept-spindown, mode: "0755" }
    - { source: usr_local_bin/smartctlnvme,             dest: /usr/local/bin/smartctlnvme,             mode: "0755", local_follow: true }
    - { source: usr_local_bin/checkntp,                 dest: /usr/local/bin/checkntp,                 mode: "0755" }
    - { source: cron/cron.daily_get_conf_info,          dest: /usr/local/bin/get_conf_info,            mode: "0755" }
    - { source: cron/cron.daily_backuppc_check_backups, dest: /usr/local/bin/backuppc_check_backups,   mode: "0755" }
    - { template: var_spool_cron/root.j2,               dest: /var/spool/cron/crontabs/root,           mode: "0600", group: "crontab" }

    - { template: etc/modprobe.d/ansible-custom.conf.j2, dest: /etc/modprobe.d/ansible-custom.conf }

    - { source: etc_systemd/system/103.scope.d/override.conf,  dest: /etc/systemd/system/103.scope.d/override.conf,  mode: "0644", when: "{{ inventory_hostname == 'pve1' }}"  }
    - { source: usr_local_bin/powertop-custom.sh,              dest: /usr/local/bin/powertop-custom.sh,              mode: "0755", when: "{{ inventory_hostname == 'pve3' }}"  }
    - { source: etc_systemd/system/powertop-custom.service,    dest: /etc/systemd/system/powertop-custom.service,    mode: "0644", when: "{{ inventory_hostname == 'pve3' }}"  }
    - { source: usr_local_bin/pve-forcerestart-lxc-if-running, dest: /usr/local/bin/pve-forcerestart-lxc-if-running, mode: "0755", when: "{{ host_is_pve_server is defined }}" }

    - { source: etc_bashrc.d/bash.bashrc, dest: /etc/bash.bashrc }
    - { source: etc/bashcolors,           dest: /etc/bashcolors  }
    - { source: etc/inputrc,              dest: /etc/inputrc     }

    # FIXME: suspect I need to set user to something other than fs and webserver etc - there might be fs on fastssd and fs on hdd, or both fs and webserver on fastssd, and we need to be able to access them both
    - { source: etc/ceph/ceph.client.fs.keyring,        dest: /etc/ceph/, mode: "0600", when: '{{ mount_ceph_clients is defined }}' }
    - { source: etc/ceph/ceph.client.webserver.keyring, dest: /etc/ceph/, mode: "0600", when: '{{ mount_ceph_clients is defined }}' }
    - { source: etc/ceph/ceph.client.media.keyring,     dest: /etc/ceph/, mode: "0600", when: '{{ mount_ceph_clients is defined }}' }
    - { source: etc/ceph/ceph.conf, dest: /etc/ceph/,                            when: '{{ mount_ceph_clients is defined }}' }

    - { source: etc/auto.master,          dest: /etc/auto.master, notify: "restart autofs", when_pkg_installed: "autofs" }
    - { template: etc/auto.nas.j2,        dest: /etc/auto.nas,    notify: "restart autofs", when_pkg_installed: "autofs" }
    - { source: etc/autofs.conf,          dest: /etc/autofs.conf, notify: "restart autofs", when_pkg_installed: "autofs" }
#    - { source: etc/default/autofs,       dest: /etc/default/autofs, notify: "restart autofs" }   MOUNT_NFS_DEFAULT_PROTOCOL seems to be ignored, and not causing me problems anyway, these days
    - { template: etc/idmapd.conf.j2,     dest: /etc/idmapd.conf }

    - { source: etc/apache2/mods-available/userdir.conf, dest: /etc/apache2/mods-available/, notify: "restart apache2", when: '{{ ( host_is_user_web_server is defined ) and ( deb_release | default("bullseye") == "bookworm" ) }}' }

    - { template: etc/rkhunter.conf.j2,   dest: /etc/rkhunter.conf }
    - { source: etc/reportbug.conf,       dest: /etc/reportbug.conf, when_pkg_installed: "reportbug" }

    - { source: etc/cron.d/munin-node,     dest: /etc/cron.d/munin-node }
    - { source: etc/munin/munin-node.conf, dest: /etc/munin/,   notify: "restart munin-node" }

#    - { source: etc/fuse.conf,            dest: /etc/fuse.conf,                          mode: "0640", group: "{{ 'fuse' if inventory_hostname == 'fs' else 'root' }}", when_pkg_installed: "fuse3"  }
#    - { source: etc/fuse.conf,            dest: /etc/fuse.conf,                          mode: "0640", group: "fuse", when: "{{ inventory_hostname == 'fs' }}" }
#    - { source: etc/fuse.conf,            dest: /etc/fuse.conf,                          mode: "0640", group: "root", when: "{{ inventory_hostname != 'fs' }}" }
    - { source: etc/fuse.conf,            dest: /etc/fuse.conf,                          mode: "0644", group: "root" }
    - { source: cron/cron.daily_check-cmos-battery, dest: /etc/cron.daily/check-cmos-battery,    mode: "0755", when: "{{ host_is_physical is defined }}" }
    - { source: etc/needrestart/notify.conf,                  dest: /etc/needrestart/ }
    - { source: etc/X11/xorg.conf.d/80-maxclients.conf,       dest: /etc/X11/xorg.conf.d/ }
    - { template: etc/chrony/sources.d/local.sources.j2,      dest: /etc/chrony/sources.d/local.sources,   notify: "restart chrony" }

    - { source: etc/logrotate.d/btmp,          dest: /etc/logrotate.d/ }
    - { source: etc/logrotate.d/wtmp,          dest: /etc/logrotate.d/ }
    - { source: etc/logrotate.d/custom,        dest: /etc/logrotate.d/ }
    - { source: etc/logrotate.d/sleep-browser, dest: /etc/logrotate.d/, when: "{{ host_is_desktop is defined }}" }
    - { source: etc/logrotate.d/apache2,       dest: /etc/logrotate.d/, when_pkg_installed: "apache2"            }
    - { source: etc/logrotate.d/iot,           dest: /etc/logrotate.d/, when: "{{ host_is_syslog is defined }}"  }

    - { source: "etc/rsyslog.conf",                                 dest: /etc/rsyslog.conf }
    - { source: "etc/rsyslog.d/remote.conf",                        dest: /etc/rsyslog.d/, when: "{{ host_is_syslog is not defined }}" }
    - { source: "etc/rsyslog.d/syslog-collector.conf",              dest: /etc/rsyslog.d/, when: "{{ host_is_syslog is defined }}"     }
    - { source: "etc/rsyslog.d/iot.conf",                           dest: /etc/rsyslog.d/, when: "{{ host_is_syslog is defined }}"     }
    - { source: "etc/rsyslog.d/zz-0-allsyslog.conf",                dest: /etc/rsyslog.d/ }
    - { source: "etc/rsyslog.d/zz-1-nosync.conf",                   dest: /etc/rsyslog.d/ }
    - { source: "etc/rsyslog.d/zz-2-news-and-mail.conf",            dest: /etc/rsyslog.d/ }
    - { source: "etc/rsyslog.d/zz-3-local,dhcp,sensors,squid.conf", dest: /etc/rsyslog.d/ }
    - { source: "etc/rsyslog.d/zz-4-catchall.conf",                 dest: /etc/rsyslog.d/ }

    - { source: etc/pulse/daemon.conf,    dest: /etc/pulse/,   when_pkg_installed: "pulseaudio"  }
    - { source: etc/pulse/system.pa,      dest: /etc/pulse/,   when_pkg_installed: "pulseaudio"  }
    - { source: etc/pulse/default.pa,     dest: /etc/pulse/,   when_pkg_installed: "pulseaudio"  }

    - { files: "{{ bin_files | flatten }}", dir: /usr/local/bin/,         mode: "0755" }
    - { files: "{{ bashrc_files | flatten }}", dir: /etc/bash.bashrc.d/                }

  remove_files:
    - { files_not: "{{ bashrc_files | flatten | map('basename') }}", dir: /etc/bash.bashrc.d/ } # FIXME: should carefully consider those containers that actually provided files in that directory, but I think the main concern is actually /etc/skel/.bashrc.d/ and by extension ~/.bashrc.d/  We're not yet overriding that, so should be fine for now...
#    - { files_not: "{{ bin_files | flatten | map('basename') }}", dir: /usr/local/bin/ } # Can't do this - lots of files in /usr/local/bin not controlled from here
