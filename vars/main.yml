---
  my_public_key: ~/.ssh/id_rsa.pub
  new_public_key: ~/.ssh/id_rsa_github.pub
  fs_public_key: ~/.ssh/fs_id_rsa.pub
  deprecated_public_key: ~/.ssh/remove_id_rsa.pub
  default_domain: rather.puzzling.org
#  ssh_port: 22
  ansible_was_run_by: "{{ lookup('env','USER') }@{{ lookup('env','HOSTNAME') }}"
  smtp_server: smtp.rather.puzzling.org
  smtp_root_alias: tconnors
  smtp_aliases: |2
    backuppc: root
    adsl: root
    nut: root

    root: tconnors
  smtp_mail_name: rather.puzzling.org
  dovecot_insecure_logfile_creation: true
  smtp_crontab:
    user: tconnors
    content: |2
      PATH=/home/tconnors/bin:/usr/bin:/bin:/usr/sbin:/sbin

      # m h  dom mon dow   command
      @reboot restartfetchmail
      12 */6 * * * restartfetchmail

      0 * * * * check-oldstopped-mail
      00 07 * * sun cd Mail && mv .log.normal .log.normal.old
      # now automated by the read-mail: 00 06 * * * mv_deleted_inbox_trash

  pve_users:
    - "{{ lookup('file', 'main.pve_users.passwd') }}"
  my_groups:
    tconnors:
      gid: 273
    backuppc:
      gid: 130
  my_users:
    tconnors:
      name: "Tim Connors"
      group: 'tconnors'
      groups: 'tconnors'
      uid: 738
      state: 'present'
      password: "{{ lookup('file', 'main.tconnors.passwd') }}"
      sshkeys:
        - "{{ lookup('file', my_public_key) }}"
        - "{{ lookup('file', new_public_key) }}"
        - "{{ lookup('file', fs_public_key) }}"
      remove_sshkeys:
        - "{{ lookup('file', deprecated_public_key) }}"
      shell: "/bin/bash"
#      comment: "{{ ansible_was_run_by }}"
    backuppc:
      name: "BackupPC"
      group: 'backuppc'
      groups: 'backuppc' # FIXME: needs fuse on fs - does this wipe it out if applied there?
      dir: '/var/lib/backuppc'
      uid: 130
      state: 'present'
      password: '*'
      sshkeys:
        - "ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAuzH2v7HY/MOAXOFsYDn3Lj5JG0RVfVYKBoJHj1BlfaH+b7lMIjY6r+6iM2eaH3eE2xUfwU1JVn8khIY1TAZfKRqmF6qST8TXkNbcvABth2hCXP0UmcIDpwXoS3P7yK14w8VmkiIG9EYOS/DGiB02SHtp2feQ6fUh01s0mZgpW+1VNzH2RV8CG79t2oDjMCjzABm2+Wkg1rLDHFONpm4VlJF59OdWugQ3GgzJVSi6O048DNfDkVWhEFah4xoG1Im1lh8pQoRFXIIf5Vk7cS4S15VsoISXiiWhaxK+TKj/aZuBX1tYsNfoEin+meutUarRxt7dxWyduNB1IjJ0SYlGWQ== backuppc@fs"
#      comment: "backuppc@fs"
      shell: "/bin/sh"
#     ansible_adm is already installed via bootstrap, but we might want to later modify it:
  # could also have multiple keys with exclusive: https://stackoverflow.com/questions/38879266/is-it-possible-to-use-ansible-authorized-key-exclusive-with-multiple-keys
    ansible_adm:
      name: "ansible_adm"
      group: 'ansible_adm'
      groups: 'ansible_adm'
      uid: 9999
      state: 'present'
      password: '*'
      sshkeys:
        - "{{ lookup('file', my_public_key) }}"
        - "{{ lookup('file', new_public_key) }}"
      shell: "/bin/bash"
      remove_sshkeys:
        - "{{ lookup('file', deprecated_public_key) }}"

  fixup_user_conf_files:
    users:
      - tconnors
      - root
    files:
      - name: .vimrc
        source: homes/.vimrc
      - name: .bashrc.d/override-turnkey-prompt.sh
        source: homes/.bashrc.d/override-turnkey-prompt.sh
        mode: "0755"
    # templates done by matching on .j2
      - name: .nanorc
        source: homes/.nanorc.j2
  bashrc_files:
    - "{{ lookup('fileglob', 'etc_bashrc.d/*.sh', wantlist=True) }}"
  bin_files:
    - "{{ lookup('fileglob', 'bin/*', wantlist=True) }}"
    - "{{ lookup('fileglob', \"bin.Linux-{{ arch | default ('x86_64') }}/*\", wantlist=True) }}"

  install_dirs: # these directories would normally be created by the
                # packages we later install, but we want to be able to
                # install these files before the package is.  Only
                # really need to create the directories that hold
                # files built by templates below, because templates
                # need a full destination path specified, whereas
                # "copy" files can just have the path specified, which
                # implies the creation of that directory first
    - { dir: "/etc/chrony/sources.d", mode: "0755" }

  install_files:
    - { source: sbin/init.sysvinit,                     dest: /sbin/init.sysvinit,                     mode: "0755" } # https://wiki.debian.org/systemd recovery from a borked systemd: grub "init=/sbin/init.sysvinit"
    - { source: usr_local_bin/hddtemp,                  dest: /usr/local/bin/hddtemp,                  mode: "0755" }
    - { source: usr_local_bin/smart-intercept-spindown, dest: /usr/local/bin/smart-intercept-spindown, mode: "0755" }
    - { source: usr_local_bin/smartctlnvme,             dest: /usr/local/bin/smartctlnvme,             mode: "0755", local_follow: true }
    - { source: usr_local_bin/checkntp,                 dest: /usr/local/bin/checkntp,                 mode: "0755" }
    - { source: cron/cron.daily_get_conf_info,          dest: /usr/local/bin/get_conf_info,            mode: "0755" }
    - { template: var_spool_cron/root.j2,               dest: /var/spool/cron/crontabs/root,           mode: "0600", group: "crontab" }

    - { template: etc/modprobe.d/ansible-custom.conf.j2, dest: /etc/modprobe.d/ansible-custom.conf }

    - { source: etc_systemd/system/103.scope.d/override.conf,  dest: /etc/systemd/system/103.scope.d/override.conf,  mode: "0644", when: "{{ inventory_hostname == 'pve1' }}"  }
    - { source: usr_local_bin/powertop-custom.sh,              dest: /usr/local/bin/powertop-custom.sh,              mode: "0755", when: "{{ inventory_hostname == 'pve3' }}"  }
    - { source: etc_systemd/system/powertop-custom.service,    dest: /etc/systemd/system/powertop-custom.service,    mode: "0644", when: "{{ inventory_hostname == 'pve3' }}"  }
    - { source: usr_local_bin/pve-forcerestart-lxc-if-running, dest: /usr/local/bin/pve-forcerestart-lxc-if-running, mode: "0755", when: "{{ host_is_pve_server is defined }}" }

    - { source: etc_bashrc.d/bash.bashrc, dest: /etc/bash.bashrc }
    - { source: etc/bashcolors,           dest: /etc/bashcolors  }
    - { source: etc/inputrc,              dest: /etc/inputrc     }

    - { source: etc/auto.master,          dest: /etc/auto.master }
    - { template: etc/auto.nas.j2,        dest: /etc/auto.nas    }
    - { source: etc/autofs.conf,          dest: /etc/autofs.conf }
#    - { source: etc/default/autofs,       dest: /etc/default/autofs }   MOUNT_NFS_DEFAULT_PROTOCOL seems to be ignored, and not causing me problems anyway, these days
    - { template: etc/idmapd.conf.j2,     dest: /etc/idmapd.conf }

    - { template: etc/rkhunter.conf.j2,   dest: /etc/rkhunter.conf }
    - { source: etc/reportbug.conf,       dest: /etc/reportbug.conf, when_pkg_installed: "reportbug" }

    - { source: etc/cron.d/munin-node,    dest: /etc/cron.d/munin-node }
    - { source: etc/munin/munin-node,     dest: /etc/munin/munin-node,   notify: "restart munin-node" }

#    - { source: etc/fuse.conf,            dest: /etc/fuse.conf,                          mode: "0640", group: "{{ 'fuse' if inventory_hostname == 'fs' else 'root' }}", when_pkg_installed: "fuse3"  }
#    - { source: etc/fuse.conf,            dest: /etc/fuse.conf,                          mode: "0640", group: "fuse", when: "{{ inventory_hostname == 'fs' }}" }
#    - { source: etc/fuse.conf,            dest: /etc/fuse.conf,                          mode: "0640", group: "root", when: "{{ inventory_hostname != 'fs' }}" }
    - { source: etc/fuse.conf,            dest: /etc/fuse.conf,                          mode: "0644", group: "root" }
    - { source: etc/cron.daily/cron.daily_check-cmos-battery, dest: /etc/cron.daily/,    mode: "0755", when: "{{ host_is_physical is defined }}" }
    - { source: etc/needrestart/notify.conf,                  dest: /etc/needrestart/ }
    - { source: etc/X11/xorg.conf.d/80-maxclients.conf,       dest: /etc/X11/xorg.conf.d/ }
    - { template: etc/chrony/sources.d/local.sources.j2,      dest: /etc/chrony/sources.d/local.sources,   notify: "restart chrony" }

    - { source: etc/logrotate.d/btmp,          dest: /etc/logrotate.d/ }
    - { source: etc/logrotate.d/wtmp,          dest: /etc/logrotate.d/ }
    - { source: etc/logrotate.d/custom,        dest: /etc/logrotate.d/ }
    - { source: etc/logrotate.d/sleep-browser, dest: /etc/logrotate.d/ }
    - { source: etc/logrotate.d/apache2,       dest: /etc/logrotate.d/, when_pkg_installed: "apache2"           }
    - { source: etc/logrotate.d/iot,           dest: /etc/logrotate.d/, when: "{{ host_is_syslog is defined }}" }

    - { source: "etc/rsyslog.conf",                                 dest: /etc/rsyslog.conf }
    - { source: "etc/rsyslog.d/remote.conf",                        dest: /etc/rsyslog.d/, when: "{{ host_is_syslog is not defined }}" }
    - { source: "etc/rsyslog.d/syslog-collector.conf",              dest: /etc/rsyslog.d/, when: "{{ host_is_syslog is defined }}"     }
    - { source: "etc/rsyslog.d/iot.conf",                           dest: /etc/rsyslog.d/, when: "{{ host_is_syslog is defined }}"     }
    - { source: "etc/rsyslog.d/zz-0-allsyslog.conf",                dest: /etc/rsyslog.d/ }
    - { source: "etc/rsyslog.d/zz-1-nosync.conf",                   dest: /etc/rsyslog.d/ }
    - { source: "etc/rsyslog.d/zz-2-news-and-mail.conf",            dest: /etc/rsyslog.d/ }
    - { source: "etc/rsyslog.d/zz-3-local,dhcp,sensors,squid.conf", dest: /etc/rsyslog.d/ }
    - { source: "etc/rsyslog.d/zz-4-catchall.conf",                 dest: /etc/rsyslog.d/ }

    - { source: etc/pulse/daemon.conf,    dest: /etc/pulse/,   when_pkg_installed: "pulseaudio"  }
    - { source: etc/pulse/system.pa,      dest: /etc/pulse/,   when_pkg_installed: "pulseaudio"  }
    - { source: etc/pulse/default.pa,     dest: /etc/pulse/,   when_pkg_installed: "pulseaudio"  }

    - { files: "{{ bin_files | flatten }}", dir: /usr/local/bin/,         mode: "0755" }
    - { files: "{{ bashrc_files | flatten }}", dir: /etc/bash.bashrc.d/                }

  remove_files:
    - { files_not: "{{ bashrc_files | flatten | map('basename') }}", dir: /etc/bash.bashrc.d/ } # FIXME: should carefully consider those containers that actually provided files in that directory, but I think the main concern is actually /etc/skel/.bashrc.d/ and by extension ~/.bashrc.d/  We're not yet overriding that, so should be fine for now...
#    - { files_not: "{{ bin_files | flatten | map('basename') }}", dir: /usr/local/bin/ } # Can't do this - lots of files in /usr/local/bin not controlled from here
