---
  my_public_key: ~/.ssh/id_rsa.pub
  new_public_key: ~/.ssh/id_rsa_github.pub
  fs_public_key: ~/.ssh/fs_id_rsa.pub
  deprecated_public_key: ~/.ssh/remove_id_rsa.pub
  default_domain: rather.puzzling.org
#  ssh_port: 22
  ansible_was_run_by: "{{ lookup('env','USER') }@{{ lookup('env','HOSTNAME') }}"

  pve_users:
    - "{{ lookup('file', 'main.pve_users.passwd') }}"
  my_groups:
    tconnors:
      gid: 273
    backuppc:
      gid: 130
  my_users:
    tconnors:
      name: "Tim Connors"
      group: 'tconnors'
      groups: 'tconnors'
      uid: 738
      state: 'present'
      password: "{{ lookup('file', 'main.tconnors.passwd') }}"
      sshkeys:
        - "{{ lookup('file', my_public_key) }}"
        - "{{ lookup('file', new_public_key) }}"
        - "{{ lookup('file', fs_public_key) }}"
      remove_sshkeys:
        - "{{ lookup('file', deprecated_public_key) }}"
      shell: "/bin/bash"
#      comment: "{{ ansible_was_run_by }}"
    backuppc:
      name: "BackupPC"
      group: 'backuppc'
      groups: 'backuppc' # FIXME: needs fuse on fs - does this wipe it out if applied there?
      dir: '/var/lib/backuppc'
      uid: 130
      state: 'present'
      password: '*'
      sshkeys:
        - "ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAuzH2v7HY/MOAXOFsYDn3Lj5JG0RVfVYKBoJHj1BlfaH+b7lMIjY6r+6iM2eaH3eE2xUfwU1JVn8khIY1TAZfKRqmF6qST8TXkNbcvABth2hCXP0UmcIDpwXoS3P7yK14w8VmkiIG9EYOS/DGiB02SHtp2feQ6fUh01s0mZgpW+1VNzH2RV8CG79t2oDjMCjzABm2+Wkg1rLDHFONpm4VlJF59OdWugQ3GgzJVSi6O048DNfDkVWhEFah4xoG1Im1lh8pQoRFXIIf5Vk7cS4S15VsoISXiiWhaxK+TKj/aZuBX1tYsNfoEin+meutUarRxt7dxWyduNB1IjJ0SYlGWQ== backuppc@fs"
#      comment: "backuppc@fs"
      shell: "/bin/sh"
#     ansible_adm is already installed via bootstrap, but we might want to later modify it:
  # could also have multiple keys with exclusive: https://stackoverflow.com/questions/38879266/is-it-possible-to-use-ansible-authorized-key-exclusive-with-multiple-keys
    ansible_adm:
      name: "ansible_adm"
      group: 'ansible_adm'
      groups: 'ansible_adm'
      uid: 9999
      uid: 9999
      state: 'present'
      password: '*'
      sshkeys:
        - "{{ lookup('file', my_public_key) }}"
        - "{{ lookup('file', new_public_key) }}"
      shell: "/bin/bash"
      remove_sshkeys:
        - "{{ lookup('file', deprecated_public_key) }}"

  fixup_conf_files:
    users:
      - tconnors
      - root
    files:
      - name: .vimrc
        lines:
          - '" We don''t need to be compatible with vi'
          - 'set nocompatible'
          - '" Turn on syntax highlighting'
          - 'syntax on'
          - 'set background=dark'
          - '" Many Colours don''t set using the following check with :hi'
          - 'let g:hybrid_use_Xresources = 1'
          - '" mouse support in terminals was invented by a moron: https://unix.stackexchange.com/questions/44513/disabling-mouse-support-in-vim-in-a-gnome-terminal-environment'
          - 'set mouse='
      - name: .nanorc
        lines:
          - '## Disable mouse support, so that mouse clicks can be used to set the'
          - '## mark and run shortcuts.'
          - 'unset mouse'
          - '## Constantly update the cursor position'
          - 'set constantshow'
          - '## Don''t display the help lists at the bottom of the screen'
          - 'set nohelp'
          - '## Don''t wrap text at all'
          - 'set nowrap'
          - '## Use smooth scrolling as the default'
          - 'set smooth'
          - '## Allow nano to be suspended with ^Z'
          - 'set suspend'
          - '## Enable ~/.nano_history for saving and reading search/replace strings.'
          - 'set historylog'
      - name: .bashrc.d/override-turnkey-prompt.sh
        lines:
          - 'if [ -e /etc/turnkey_version ] ; then PROMPT_COMMAND=handleprompt ; fi '
        mode: "0755"
  bashrc_files:
    - "{{ lookup('fileglob', 'etc_bashrc.d/*.sh', wantlist=True) }}"
  bin_files:
    - "{{ lookup('fileglob', 'bin/*', wantlist=True) }}"
    - "{{ lookup('fileglob', \"bin.Linux-{{ arch | default ('x86_64') }}/*\", wantlist=True) }}"

  install_dirs:
    - { dir: "/etc/bash.bashrc.d", mode: "0755" }

  install_files:
    - { source: usr_local_bin/hddtemp, dest: /usr/local/bin/hddtemp, mode: "0755" }
    - { source: usr_local_bin/smart-intercept-spindown, dest: /usr/local/bin/smart-intercept-spindown, mode: "0755" }
    - { source: cron/cron.daily_get_conf_info, dest: /usr/local/bin/get_conf_info, mode: "0755" }
    - { source: etc_bashrc.d/bash.bashrc, dest: /etc/bash.bashrc, mode: "0644" }
    - { source: etc/bashcolors, dest: /etc/bashcolors, mode: "0644" }
    - { source: etc/inputrc, dest: /etc/inputrc, mode: "0644" }
    - { files: "{{ bin_files | flatten }}", dir: /usr/local/bin/, mode: "0755" }
    - { files: "{{ bashrc_files | flatten }}", dir: /etc/bash.bashrc.d/, mode: "0644" }

  remove_files:
    - { files_not: "{{ bashrc_files | flatten | map('basename') }}", dir: /etc/bash.bashrc.d/ } # FIXME: should carefully consider those containers that actually provided files in that directory, but I think the main concern is actually /etc/skel/.bashrc.d/ amd by extension ~/.bashrc.d/  We're not yet overriding that, so should be fine for now...
#    - { files_not: "{{ bin_files | flatten | map('basename') }}", dir: /usr/local/bin/ } # Can't do this - lots of files in /usr/local/bin not controlled from here
